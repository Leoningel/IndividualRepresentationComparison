fitness,test_fitness,seed,benchmark_name,genotype,phenotype,prods
98.4793338444787,72.63050211046018,1,boston_housing,"Genotype(dna=[54220, 59472, 55676, 38127, 23352, 12400, 1205, 63903, 84210, 74898, 91673, 27543, 95610, 72715, 46286, 1688, 23434, 31716, 40648, 32241, 51684, 95035, 90669, 90311, 87545, 67662, 87411, 35361, 2203, 21589, 6097, 22731, 47406, 19191, 78136, 48185, 10410, 63244, 18827, 65019, 52302, 92584, 28600, 21602, 40778, 74955, 96069, 26502, 63290, 20215, 24912, 46125, 62773, 92413, 37032, 43845, 82704, 72198, 87597, 83281, 46868, 90018, 68972, 90156, 74796, 30224, 77321, 20114, 70362, 99979, 95, 79227, 267, 24597, 55292, 4553, 7087, 2929, 37642, 52910, 53767, 60816, 6396, 32356, 53623, 93930, 61663, 71258, 60082, 68256, 54611, 92903, 47808, 40352, 67070, 81903, 90591, 30962, 19604, 17630, 41020, 29359, 19885, 82633, 13302, 24976, 88816, 99812, 58241, 43839, 26495, 81671, 91796, 69893, 92190, 87478, 3887, 4799, 52579, 80060, 17153, 45512, 20183, 41459, 26794, 61726, 30230, 64348, 48251, 73238, 87509, 49940, 35095, 34337, 74237, 17053, 95667, 21568, 91634, 91431, 7785, 86520, 9961, 20612, 39254, 39500, 47692, 45997, 84852, 63892, 33144, 43157, 38432, 81171, 4837, 44717, 76857, 63604, 82442, 34662, 74162, 13652, 14433, 82703, 46547, 97900, 55843, 24541, 25204, 61187, 6213, 2400, 49386, 72608, 6008, 94363, 63106, 35907, 88691, 26803, 84391, 69486, 29690, 64410, 34525, 50867, 57826, 42934, 71616, 39569, 97174, 90549, 66128, 64578, 7316, 68151, 96904, 49408, 7379, 29233, 53224, 74411, 69751, 32056, 73960, 29357, 92255, 13196, 51361, 62792, 2104, 62962, 15946, 36259, 76917, 96269, 62129, 52864, 84515, 58300, 98289, 91021, 39242, 66469, 21329, 71933, 69331, 40402, 22447, 15785, 87818, 1362, 34289, 37264, 93153, 15939, 15511, 37938, 73506, 92037, 87601, 1322, 54051, 18510, 53145, 17649, 176, 33308, 18638, 58011, 75536, 97782, 96459, 15247, 50987, 13426])",np.sqrt(np.abs(B)),"{<class 'examples.boston_housing.Literal'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'str'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'int'>: 0, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 2}"
64.15589530343007,60.41107741732284,5,boston_housing,"Genotype(dna=[12141, 55827, 14810, 83944, 28330, 84908, 44355, 60846, 38577, 41298, 52159, 17633, 20301, 47009, 59469, 60870, 76248, 1371, 30696, 32698, 59588, 34089, 69687, 97493, 96178, 77119, 31228, 30451, 43877, 1642, 66937, 58472, 77426, 48095, 14409, 48769, 63616, 15167, 90900, 75613, 42050, 70461, 98267, 98771, 41873, 37092, 17010, 98412, 69660, 69027, 12517, 89965, 3983, 90862, 89000, 39046, 95423, 25004, 533, 70234, 88063, 88996, 22316, 29562, 49904, 35905, 59942, 10709, 59573, 65730, 10935, 82352, 2332, 36338, 41928, 49761, 93390, 7261, 69296, 27545, 94672, 76153, 76128, 54763, 11582, 17268, 42023, 18997, 51464, 14560, 6994, 8180, 63583, 51316, 47707, 97803, 6284, 82477, 56141, 14884, 28340, 47735, 21582, 8775, 93212, 53313, 96067, 83664, 30180, 92781, 55680, 11693, 43753, 14438, 69252, 14641, 49128, 92579, 28829, 65161, 35445, 48124, 3119, 27917, 76451, 8852, 56915, 55553, 23292, 35115, 75416, 43316, 80748, 30738, 68076, 59638, 68870, 77854, 82466, 25876, 40260, 26957, 45885, 20393, 88542, 33120, 38036, 56141, 756, 80716, 289, 14540, 15429, 33642, 33499, 59337, 2902, 83007, 19217, 70393, 19542, 14866, 78938, 34340, 25990, 23754, 16329, 97033, 5931, 14834, 8526, 17607, 62795, 71977, 47, 82200, 96597, 58945, 3931, 58422, 38218, 58357, 15074, 18114, 46366, 47215, 10540, 52657, 14956, 30665, 78969, 28744, 29181, 16034, 70384, 51998, 5196, 42615, 89411, 12880, 80097, 34099, 34862, 97881, 27682, 19499, 4970, 23199, 50493, 22419, 74135, 15170, 79775, 15423, 59539, 62876, 28972, 91803, 24728, 55917, 65386, 28731, 19482, 34166, 79916, 13081, 66904, 29679, 52820, 51524, 84771, 74889, 91578, 18953, 71789, 51341, 73803, 32152, 42969, 62358, 75303, 60593, 94065, 94051, 14707, 22608, 18693, 70629, 16882, 36114, 22138, 50028, 78085, 49587, 40196, 86042])",(4 * RM),"{<class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'str'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0}"
61.40132941014696,40.097455639226425,17,boston_housing,"Genotype(dna=[52543, 53070, 98061, 8035, 66513, 97903, 34915, 26626, 75900, 95599, 18572, 9478, 18184, 94222, 66187, 50824, 36140, 90381, 92707, 47984, 40683, 90985, 82642, 79868, 91549, 30141, 4936, 24680, 58066, 79034, 5790, 23408, 7995, 96480, 89045, 36007, 49044, 66511, 90149, 29838, 88787, 60169, 37811, 49454, 93756, 10589, 44233, 46975, 44821, 95613, 43750, 63817, 67945, 46276, 72621, 72372, 22553, 94430, 62554, 17071, 13494, 46094, 36655, 76421, 93963, 13376, 73718, 50289, 55199, 35088, 60377, 82392, 72297, 67767, 44884, 51076, 45043, 11849, 72256, 21148, 49776, 77371, 72743, 87887, 48826, 52630, 35707, 40010, 53047, 87817, 53538, 78687, 85189, 66769, 46738, 67154, 58779, 70505, 11601, 79176, 85861, 63161, 28518, 87978, 12376, 80805, 66795, 87450, 90307, 30407, 70100, 34432, 81786, 44230, 87613, 41519, 31181, 7631, 79254, 73541, 32976, 74815, 9905, 93657, 88188, 9899, 61341, 2756, 32849, 66112, 76490, 33371, 80696, 39646, 3296, 6563, 45008, 81611, 58797, 31047, 92142, 70620, 67687, 82447, 19343, 37852, 31267, 44576, 29625, 31910, 8016, 95119, 10583, 18807, 28333, 40965, 89758, 65037, 20951, 3951, 93286, 68264, 4579, 22340, 13109, 32117, 99814, 83763, 96228, 92056, 32604, 66520, 18796, 38611, 57929, 63790, 38842, 19658, 12374, 8786, 92154, 35932, 4532, 62930, 1184, 48879, 30994, 26295, 7044, 55404, 76518, 97945, 45666, 60397, 78907, 52889, 9320, 32093, 82250, 77622, 53537, 27572, 11021, 75526, 2414, 48818, 98289, 85729, 45543, 76104, 18394, 82115, 83316, 13222, 50641, 75185, 14843, 76613, 54644, 69458, 23579, 56726, 50014, 48483, 51581, 30280, 53122, 99933, 20215, 37057, 29811, 43902, 35915, 88102, 97293, 13111, 23827, 62941, 96264, 82177, 35389, 93988, 99074, 65476, 48499, 46404, 83145, 47209, 4233, 22064, 92042, 2205, 3223, 75191, 2095, 72408])",np.sqrt(np.abs(np.exp(RM))),"{<class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'str'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'int'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 3, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'examples.boston_housing.Literal'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
61.40132941014696,40.097455639226425,21,boston_housing,"Genotype(dna=[50709, 62211, 14285, 2403, 87287, 18938, 72725, 34279, 41976, 93668, 67941, 91390, 31693, 6715, 94639, 63424, 56198, 68638, 43052, 17749, 49285, 13095, 72751, 56510, 95751, 43105, 746, 64715, 15043, 87886, 35540, 53988, 96082, 27562, 86182, 25249, 31605, 17625, 58858, 70059, 83892, 6197, 45390, 19238, 65337, 38239, 45020, 86658, 8862, 10655, 30903, 511, 81019, 48067, 7083, 1707, 66927, 80996, 51287, 75618, 96936, 90565, 21162, 96382, 55270, 39824, 31341, 18236, 37960, 41912, 43572, 68548, 55327, 85100, 12006, 88439, 8553, 90843, 5170, 31150, 36203, 62197, 5170, 15676, 85635, 86078, 34739, 1967, 29374, 58817, 63863, 155, 80385, 90901, 17607, 84496, 42923, 39250, 89612, 18118, 11452, 61220, 28106, 84469, 67634, 84219, 30096, 58094, 86782, 41309, 44541, 63244, 89560, 98043, 1581, 82222, 8697, 84701, 73612, 1555, 40925, 35280, 53734, 5102, 98191, 96213, 79378, 55367, 88048, 11258, 87664, 4672, 44896, 17190, 39841, 41041, 8353, 37967, 32054, 10558, 53028, 54836, 52548, 66862, 55971, 3467, 71692, 65641, 70132, 71303, 7658, 91187, 9465, 21770, 76276, 31490, 36802, 12292, 97861, 47016, 28606, 99112, 52632, 55338, 68158, 20624, 77317, 47248, 73796, 68777, 9164, 52750, 38426, 66781, 85040, 80291, 35412, 15059, 4289, 48430, 61770, 79195, 18062, 69553, 65814, 42336, 99683, 52546, 2915, 94558, 18852, 64783, 86062, 6104, 19957, 92427, 61625, 99520, 7441, 22723, 71724, 45748, 74467, 44616, 22137, 40218, 58324, 64004, 20848, 99447, 41595, 72614, 37183, 99805, 9227, 30877, 88075, 56871, 75592, 49195, 24016, 98929, 68671, 79045, 23057, 36491, 10799, 12974, 20266, 2902, 56505, 86666, 66211, 47516, 81844, 30151, 42104, 42007, 96092, 99176, 19228, 72764, 16853, 96555, 71471, 38566, 3144, 53503, 3563, 60658, 89831, 30969, 10074, 53602, 48736, 43828])",np.sqrt(np.abs(np.exp(RM))),"{<class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'examples.boston_housing.Literal'>: 0, <class 'str'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'int'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0}"
41.48053410732173,25.52445490338934,7,boston_housing,"Genotype(dna=[69136, 43200, 81272, 26689, 69292, 60351, 719, 27880, 35148, 21564, 59565, 65611, 37984, 98542, 11251, 53435, 24225, 82863, 52848, 52256, 62865, 50237, 46622, 13131, 68563, 57277, 13967, 29254, 49359, 53137, 53915, 87237, 4808, 48161, 53639, 58564, 2740, 23115, 64219, 52618, 13944, 69480, 15211, 6328, 69787, 9667, 54368, 19800, 72980, 27995, 839, 79464, 80322, 92284, 80374, 8830, 90543, 24117, 13302, 28965, 61377, 71802, 18648, 57732, 88501, 61952, 93530, 26506, 62570, 69815, 17287, 60483, 5900, 84369, 55133, 43707, 16292, 30210, 28261, 73642, 8384, 81618, 22461, 57920, 95634, 15041, 69313, 68003, 73824, 40836, 57928, 60715, 95870, 11764, 45338, 20432, 38256, 69053, 81906, 92819, 57783, 30260, 27676, 23607, 93663, 75657, 26090, 43605, 53687, 30279, 33289, 32481, 69433, 81747, 72458, 23828, 39854, 29638, 47020, 91146, 70558, 36588, 69073, 13084, 2330, 8558, 70791, 80498, 64532, 60408, 70023, 35916, 9608, 82947, 64864, 63900, 36805, 7755, 74198, 23618, 2866, 16546, 50658, 70900, 60382, 43843, 85272, 82480, 89037, 52471, 67306, 6038, 47700, 34512, 57778, 41171, 72331, 4689, 40621, 10937, 65811, 85074, 47726, 39869, 18346, 32223, 49105, 68851, 8168, 63041, 40424, 52146, 34846, 97328, 33707, 80499, 44226, 15397, 71867, 53231, 13570, 8915, 90690, 39704, 11155, 4811, 63890, 98494, 35250, 52878, 62653, 68501, 51784, 85744, 39659, 52855, 56235, 13522, 52773, 85497, 91718, 17094, 49877, 33300, 45317, 28337, 70455, 12801, 24792, 18235, 47088, 24050, 83454, 42946, 13229, 59215, 33438, 5105, 62400, 83958, 9722, 86602, 94237, 69585, 31607, 83828, 66185, 63973, 23255, 32284, 58483, 17069, 3703, 87087, 54108, 25390, 3716, 18536, 69282, 11475, 91368, 995, 30000, 60980, 29694, 15373, 10627, 90827, 98915, 89872, 85940, 44762, 17060, 20786, 3909, 70550])",(9/(NOX/np.sqrt(np.abs((5/np.exp((1 - np.sin(((6 + RM)/1))))))))),"{<class 'geneticengine.grammars.sgp.Number'>: 16, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'int'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1}"
39.361593267841805,31.591046337437962,23,boston_housing,"Genotype(dna=[96585, 8532, 18641, 3544, 54526, 19772, 6492, 22955, 71828, 2709, 10339, 45035, 71916, 18731, 68743, 33182, 69369, 90693, 42955, 67766, 47233, 4470, 9123, 66318, 8209, 76470, 97553, 90031, 15286, 46673, 75010, 54670, 61766, 81632, 38751, 55683, 18690, 16966, 14615, 10868, 25565, 65165, 12253, 74637, 50467, 13880, 53729, 96877, 5494, 85235, 59443, 52090, 38140, 3238, 83806, 39458, 39389, 81474, 86225, 18248, 8775, 69624, 77923, 46630, 21349, 48533, 51764, 7295, 45319, 54470, 49631, 77534, 38303, 78912, 29232, 47203, 24161, 85418, 16827, 91126, 91463, 20846, 42202, 87346, 29106, 97905, 70554, 51828, 44475, 56461, 56875, 36862, 19215, 94766, 47853, 89422, 19046, 8459, 93791, 10036, 16428, 94861, 90247, 68594, 70077, 8188, 22872, 6915, 19058, 61105, 36550, 50744, 44643, 45152, 11572, 1146, 5584, 51749, 68991, 64919, 8750, 37876, 17396, 62202, 62213, 28374, 7204, 67255, 1976, 51912, 27842, 90224, 78487, 39722, 92107, 54163, 55436, 18478, 16451, 1358, 47001, 63838, 87868, 59248, 52932, 92660, 87760, 42331, 15660, 64382, 29326, 20426, 10662, 31773, 85829, 92141, 25181, 92927, 38824, 27481, 20623, 57465, 65388, 31139, 92319, 46818, 50217, 70446, 44750, 15401, 18309, 57881, 47198, 39450, 87494, 15054, 84343, 56705, 52780, 97170, 22388, 78106, 60178, 78168, 15290, 76479, 92807, 98754, 25687, 12541, 76002, 64772, 48249, 71274, 97347, 70462, 59930, 55446, 45122, 11633, 89642, 86697, 97429, 66232, 6689, 73299, 43855, 22289, 1994, 4370, 84559, 93486, 50089, 25519, 18487, 39726, 45080, 49297, 79904, 12348, 98845, 42840, 53245, 24404, 98866, 97428, 75242, 69013, 88811, 99543, 49964, 61551, 13374, 55187, 45493, 13429, 92085, 74330, 32853, 94844, 93738, 13362, 73464, 65891, 93197, 17628, 59392, 45199, 89621, 45177, 54674, 62869, 5902, 27823, 19109, 79045])",np.exp(np.exp((np.log(1 + np.abs(RM)) * np.tanh(np.tanh((np.log(1 + np.abs((np.tanh(LSTAT) - np.sqrt(np.abs(RM)))))/(np.sqrt(np.abs(np.log(1 + np.abs(3)))) + np.log(1 + np.abs((3/B)))))))))),"{<class 'geneticengine.grammars.sgp.Number'>: 22, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'int'>: 2, <class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1}"
83.10659948041588,547.1852073982101,11,boston_housing,"Genotype(dna=[3620, 65915, 6230, 81973, 52665, 54681, 34219, 62935, 88147, 39138, 26754, 53699, 57490, 55895, 30836, 81215, 7984, 89603, 21862, 56982, 73473, 81629, 21188, 22502, 5852, 93341, 18203, 55341, 94772, 37953, 2918, 87469, 43145, 62155, 79708, 65792, 38902, 73893, 68442, 68935, 97587, 17351, 95154, 41404, 23126, 15403, 79135, 21949, 68972, 98622, 39585, 63707, 74837, 75163, 64254, 27118, 22629, 58525, 28644, 23980, 73140, 81779, 87643, 32207, 2752, 31085, 54414, 73030, 10053, 9444, 12635, 9937, 79443, 21681, 46340, 15140, 83111, 47597, 92065, 11936, 2514, 26799, 96288, 59329, 57517, 83780, 66223, 80297, 92382, 58730, 999, 81638, 48990, 51700, 2911, 82357, 2694, 36256, 96472, 4139, 29479, 53662, 92270, 62601, 3947, 38611, 31122, 44484, 85887, 78925, 21846, 73213, 89218, 83688, 13315, 21331, 37328, 30047, 90, 85204, 24332, 1474, 54768, 21394, 71259, 3082, 84073, 19864, 24668, 93835, 20594, 89807, 20100, 5184, 52472, 5133, 56694, 29537, 86038, 45683, 37872, 84125, 69472, 51541, 99079, 84121, 76682, 7932, 95410, 52135, 28704, 48771, 26373, 1241, 72542, 25575, 58196, 30348, 15694, 18097, 13783, 15152, 86297, 2350, 50392, 73145, 88839, 36919, 78030, 80538, 45750, 16507, 87998, 97146, 28730, 25267, 42013, 97307, 64923, 69113, 69500, 94871, 87424, 5147, 79534, 26893, 40214, 46210, 53779, 43596, 45139, 85990, 63388, 18383, 99708, 41888, 37037, 32726, 30068, 72542, 75771, 3221, 44208, 4120, 71146, 76713, 91717, 96074, 2787, 17645, 36846, 44172, 96198, 5826, 96116, 9719, 17627, 88959, 23430, 45082, 55110, 93131, 80132, 35056, 80019, 39296, 40819, 38712, 68311, 18339, 64902, 41150, 66072, 74760, 44914, 38285, 88815, 87388, 60597, 53629, 54506, 7301, 34632, 99880, 89985, 48551, 82352, 4804, 58010, 3725, 73742, 1002, 64439, 28776, 802, 17331])",(3/np.sin((np.tanh(7) + ((np.sin(5) * ((np.tanh(np.sin(2)) * 9)/(np.exp((CHAS + INDUS)) * ((B/RM)/(3 - 5))))) + np.sqrt(np.abs(4)))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 3, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 30}"
60.4387547194429,53.264095090788985,26,boston_housing,"Genotype(dna=[2670, 14522, 54556, 37736, 56073, 32918, 38471, 84629, 59405, 95763, 66126, 13321, 71285, 51255, 17460, 70415, 61334, 18850, 60305, 86021, 81198, 74338, 74799, 99942, 76148, 99752, 79043, 78907, 91258, 49191, 63458, 78484, 28902, 69399, 53128, 42413, 98904, 1237, 88690, 17144, 72929, 40459, 48950, 80588, 75972, 91787, 77152, 92196, 41541, 9084, 74607, 86877, 67536, 70508, 41712, 93029, 38859, 31509, 10214, 43071, 3102, 98690, 79880, 31119, 85646, 49601, 15230, 34298, 28124, 18746, 5752, 16772, 923, 2411, 60134, 29636, 7068, 17985, 41118, 73361, 32283, 61258, 11315, 78810, 62851, 18243, 74906, 21238, 19959, 38525, 20114, 44851, 86536, 60306, 34646, 595, 24121, 95125, 42345, 88330, 39059, 25314, 7351, 57562, 5939, 3099, 1499, 21106, 91991, 71426, 28236, 48356, 49014, 19763, 50161, 81565, 56655, 27046, 54467, 28200, 10337, 72872, 81081, 12984, 35788, 35699, 48836, 78808, 63336, 93725, 28204, 22875, 67800, 84926, 88431, 20553, 45202, 90305, 4066, 5329, 69603, 17893, 68216, 26018, 34737, 18151, 2673, 62697, 6718, 68692, 94052, 27029, 40299, 60852, 81245, 14370, 90066, 75245, 1771, 36947, 16581, 57391, 28220, 88756, 29002, 27528, 44442, 80702, 99027, 76872, 68987, 48293, 77714, 45116, 8275, 304, 55118, 85312, 84426, 68309, 13129, 33619, 99095, 51028, 34521, 89176, 53448, 2630, 27696, 30878, 85444, 90277, 11795, 88042, 13463, 89796, 38635, 80951, 16337, 37403, 4214, 17522, 23482, 50517, 25874, 59255, 89264, 92927, 95247, 31351, 91782, 81350, 87729, 55796, 59200, 97501, 98301, 58400, 59363, 27150, 76552, 67651, 14012, 76032, 98851, 68304, 6746, 85820, 37962, 89646, 44883, 53847, 40438, 52519, 28345, 34637, 12390, 18487, 61489, 88740, 44937, 14528, 99393, 67989, 25868, 59931, 32747, 86046, 44825, 47685, 91142, 97882, 19480, 98823, 70404, 95563])",(np.exp(np.sqrt(np.abs(np.sqrt(np.abs(np.sqrt(np.abs(9))))))) * RM),"{<class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'str'>: 1, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'int'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 0}"
47.94371388589845,45.00452999743777,24,boston_housing,"Genotype(dna=[77764, 26985, 52961, 26714, 90581, 1009, 5607, 44168, 4551, 97785, 44651, 11244, 8122, 71482, 56346, 66639, 64196, 36284, 56, 67809, 84228, 73787, 19932, 26819, 18193, 50413, 42237, 93944, 59760, 82835, 36631, 20188, 73297, 41782, 51742, 83130, 33039, 32354, 3624, 11262, 712, 24809, 31588, 14108, 34882, 84118, 54578, 97364, 38655, 65938, 86331, 53843, 2906, 28610, 37434, 9652, 79170, 81203, 2774, 5157, 74521, 8909, 62611, 32740, 55617, 55088, 28235, 5751, 24544, 83679, 26454, 84407, 90617, 63914, 2674, 74673, 89563, 11517, 91410, 93538, 8739, 6798, 56553, 20588, 74673, 90701, 24546, 94774, 25147, 68273, 19266, 95937, 30965, 83037, 34477, 24030, 76024, 65999, 20973, 22909, 13687, 73869, 6144, 59309, 994, 65078, 2444, 5482, 68903, 64119, 22993, 88376, 61729, 2996, 49854, 92061, 97292, 26263, 5673, 73960, 32426, 7552, 17472, 17495, 10778, 80832, 40921, 60730, 11307, 85481, 77994, 31680, 47924, 40755, 80977, 49962, 5543, 52607, 26357, 34370, 36819, 16474, 24362, 85591, 73031, 68368, 11542, 9540, 14969, 77070, 70284, 68478, 3603, 55655, 7772, 9112, 3484, 7210, 6699, 68096, 71613, 3375, 27473, 28001, 76813, 48758, 16722, 65625, 43994, 83273, 2537, 36201, 68368, 63300, 85378, 91675, 41715, 51604, 44696, 64008, 67986, 9631, 55769, 50601, 36723, 35393, 25185, 88552, 62075, 70054, 79903, 47104, 15070, 48846, 38899, 47100, 64942, 49970, 66518, 93922, 40668, 34729, 94413, 94797, 25552, 68868, 52302, 63278, 31214, 77415, 70795, 88139, 14182, 80453, 61792, 9678, 17126, 52911, 89710, 37886, 7317, 58224, 59466, 89701, 47442, 10556, 66645, 94884, 19922, 64598, 92165, 21606, 24920, 48845, 99113, 16076, 48640, 78900, 94120, 42980, 34996, 37103, 885, 98005, 72271, 81881, 32970, 23391, 64664, 59929, 77432, 5120, 62231, 10223, 16452, 95523])",(np.exp(np.sqrt(np.abs(np.exp(np.sin(np.sin((np.sin(np.sqrt(np.abs(LSTAT)))/2))))))) * 9),"{<class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'int'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 12, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2}"
34.20464681654054,31.566256332010514,16,boston_housing,"Genotype(dna=[93521, 82019, 4910, 43543, 54276, 54106, 35412, 34152, 88917, 67412, 57084, 27682, 38099, 98865, 35981, 7910, 81162, 10234, 23074, 14820, 61249, 94676, 39853, 38051, 82393, 54212, 77847, 26795, 92157, 74921, 93222, 34056, 43812, 94041, 24712, 22787, 8388, 12730, 42185, 61445, 48548, 93422, 54341, 85767, 11860, 45001, 6626, 10831, 76301, 43490, 17149, 63482, 89167, 24240, 55056, 6812, 2060, 32290, 77256, 44074, 52497, 48530, 98673, 94813, 50603, 37880, 27407, 89651, 55155, 7761, 28880, 75261, 9178, 60499, 20858, 52170, 6358, 7830, 12249, 27612, 58943, 10549, 33007, 72888, 46059, 85449, 91449, 65955, 40869, 70265, 9958, 2041, 183, 14283, 32716, 81956, 34630, 62925, 25666, 4443, 12959, 86388, 82757, 77095, 64223, 50045, 94559, 30602, 30506, 34335, 96246, 2548, 25091, 85877, 6386, 63751, 15876, 42401, 24411, 74358, 56790, 23272, 53883, 23309, 76302, 69762, 35929, 39678, 32102, 91457, 27020, 54625, 60944, 6441, 49772, 62743, 97097, 22375, 43642, 89856, 52337, 9408, 16852, 21089, 89307, 87490, 58470, 88351, 4235, 23652, 25303, 99901, 22083, 30823, 37850, 92851, 78471, 26983, 51423, 89906, 96854, 80227, 82828, 44761, 87822, 79381, 65402, 78015, 97054, 19087, 23079, 62184, 26250, 37055, 82734, 59561, 18588, 61127, 18697, 88755, 80436, 14791, 81647, 23946, 76309, 50509, 12631, 51631, 48924, 30158, 16653, 25563, 33130, 25012, 46202, 62938, 93888, 68530, 70879, 77709, 6164, 78820, 6161, 15097, 52603, 44052, 72944, 61181, 54280, 47233, 85874, 23569, 82285, 31665, 86547, 21054, 33544, 30802, 21230, 80853, 24185, 6052, 81355, 754, 68237, 65518, 52802, 27254, 77150, 21086, 96507, 42639, 12882, 91385, 80482, 52543, 87438, 3149, 55081, 72449, 57425, 86494, 79977, 81968, 23704, 18246, 95105, 15192, 43573, 88820, 22996, 73321, 50001, 91234, 57725, 59079])",(3/(np.sin((np.sin(2)/RM)) * np.sqrt(np.abs(np.sin(((4 - np.exp(((3 - LSTAT)/7))) + np.log(1 + np.abs(np.log(1 + np.abs((np.sin(2) + (7 * 0)))))))))))),"{<class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'int'>: 8, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 27}"
24.219405384063506,25.50997209609338,3,boston_housing,"Genotype(dna=[60860, 70050, 89654, 61344, 11344, 13042, 51996, 74057, 9612, 21240, 1664, 39225, 64685, 79845, 78769, 35948, 85770, 6309, 43903, 34410, 81325, 77014, 6276, 6583, 84838, 32961, 14693, 72506, 32250, 97308, 16232, 54378, 69279, 29308, 45160, 24711, 4196, 59359, 76134, 74554, 17530, 75090, 43741, 3338, 75217, 98369, 72705, 60380, 9914, 70893, 35590, 22258, 49087, 3918, 68530, 9093, 50890, 61916, 57536, 38456, 83695, 83173, 58650, 57452, 59365, 59531, 45087, 9697, 24458, 81427, 5456, 86468, 3628, 74356, 25858, 86727, 10560, 93768, 44783, 69751, 66439, 22063, 19938, 86412, 82621, 30785, 64882, 94454, 53577, 7401, 29731, 69632, 22425, 2913, 89765, 36551, 21502, 8210, 69789, 66739, 4839, 24450, 78216, 33445, 44377, 48043, 65391, 27561, 96654, 44453, 75158, 95298, 47892, 32500, 79036, 26503, 73147, 97118, 56352, 31101, 89924, 39090, 17918, 31904, 25936, 42017, 87898, 19912, 68458, 29650, 15225, 62495, 90436, 50474, 59339, 25823, 20680, 75042, 87841, 60450, 9687, 39362, 8739, 463, 43883, 90276, 98015, 11323, 71983, 13832, 63365, 16845, 34607, 70078, 13746, 5967, 19871, 56950, 2127, 71131, 10814, 14500, 77122, 17255, 95263, 87156, 5246, 43569, 37100, 66276, 14458, 31971, 26911, 88488, 85764, 18098, 56717, 67028, 61681, 37356, 8240, 87978, 75997, 3588, 92275, 3629, 17074, 68226, 8205, 51935, 12855, 79658, 41467, 38669, 60511, 11610, 87491, 29511, 20443, 28125, 8549, 93365, 91875, 44039, 8520, 70232, 5926, 45838, 57985, 774, 49649, 54858, 53654, 84673, 77876, 19724, 34178, 66388, 18017, 14869, 6112, 28487, 32757, 2377, 44363, 70540, 67171, 31828, 25653, 92010, 53140, 74706, 73241, 82748, 91419, 51044, 60909, 7689, 54152, 81495, 9651, 66932, 37588, 90546, 12655, 42703, 73513, 64014, 24974, 40822, 86293, 47820, 61307, 56798, 46963, 73787])",(4 * (np.exp(np.log(1 + np.abs(RM)))/np.log(1 + np.abs((np.log(1 + np.abs(LSTAT))/np.tanh(((np.sqrt(np.abs((5 * 6)))/CRIM) + CHAS))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'examples.boston_housing.Literal'>: 3, <class 'str'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 19, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 1}"
48.82013164680828,59.24780051697632,8,boston_housing,"Genotype(dna=[60848, 51524, 81956, 5835, 18575, 87852, 16095, 28925, 25477, 57424, 15016, 55843, 15608, 72210, 31542, 85305, 17009, 34303, 8729, 89662, 2061, 18874, 80415, 70823, 91939, 32260, 82903, 92408, 24725, 2030, 75317, 15089, 31753, 72174, 4799, 22388, 7366, 99112, 56610, 64561, 86251, 1899, 26368, 86751, 75807, 69228, 12553, 67306, 99895, 42220, 38119, 19879, 63375, 93944, 4086, 735, 12723, 411, 93775, 87613, 8663, 80186, 88654, 74067, 62893, 85977, 21365, 81331, 80694, 3697, 42757, 96657, 92996, 1856, 58018, 48005, 23983, 19282, 54496, 18090, 328, 20387, 47996, 502, 28797, 75720, 85538, 15812, 72797, 25296, 20081, 43444, 32894, 78443, 54669, 9169, 66151, 38962, 88942, 98321, 92473, 16233, 2385, 33142, 54088, 47087, 62737, 35964, 22764, 95055, 15268, 51670, 3584, 17004, 15400, 52391, 26517, 7917, 20193, 77490, 39807, 72885, 33975, 89498, 99136, 56973, 9525, 45283, 6638, 20975, 64750, 28112, 81489, 15558, 24345, 75300, 40602, 37022, 83519, 68753, 12319, 50638, 64552, 47796, 7690, 93524, 14778, 49079, 90012, 395, 14496, 81165, 79253, 74851, 1534, 94436, 85103, 81887, 46596, 14755, 1345, 12919, 4577, 90732, 20651, 26405, 72776, 68377, 67462, 8583, 44645, 5264, 8560, 71925, 41198, 3019, 65801, 80988, 25036, 73509, 40768, 11117, 80882, 55464, 7926, 12772, 82426, 51619, 43437, 17734, 97892, 24299, 23963, 58543, 44166, 1239, 36522, 96523, 61684, 26986, 5293, 42260, 98037, 66524, 23048, 48241, 91455, 33352, 41269, 27570, 19305, 41664, 31036, 18852, 17958, 88497, 98637, 38180, 94655, 8889, 15301, 27014, 99725, 33778, 4155, 53068, 39135, 17504, 64193, 98011, 14981, 97710, 93820, 32008, 64295, 73402, 33380, 38996, 68998, 25639, 40891, 51942, 13048, 78907, 8781, 98097, 46341, 48073, 30036, 40154, 16926, 20667, 12660, 24494, 8525, 57628])",(np.sqrt(np.abs(B)) + np.sqrt(np.abs((np.sqrt(np.abs((6 - np.exp(np.log(1 + np.abs(np.sqrt(np.abs(LSTAT)))))))) * (AGE/(4 - LSTAT)))))),"{<class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'str'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'int'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 17, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'examples.boston_housing.Literal'>: 2}"
69.25204174248934,58.441905043016305,6,boston_housing,"Genotype(dna=[8848, 50027, 35137, 90801, 50464, 60592, 41343, 96978, 59192, 28598, 97860, 26322, 35769, 85630, 83671, 81236, 72995, 66245, 11545, 36563, 74607, 85111, 77112, 19025, 28894, 67822, 73916, 56298, 58388, 4516, 73176, 77192, 23796, 79792, 80460, 36410, 33812, 17205, 50261, 37392, 89185, 10287, 89695, 63580, 60798, 84189, 37865, 28059, 44783, 13746, 58889, 13240, 11936, 57545, 19440, 56242, 75262, 68700, 87324, 1595, 87440, 62772, 71483, 25728, 22880, 71755, 62847, 5482, 29596, 41629, 37468, 38697, 23000, 45821, 96293, 71943, 74685, 95815, 90775, 66617, 66655, 75764, 93249, 32345, 40684, 65160, 52150, 77739, 87553, 91918, 95147, 49948, 83110, 96864, 77598, 21768, 89157, 49753, 15467, 48400, 55584, 96354, 73477, 53292, 80519, 10931, 2232, 77893, 14172, 20318, 59831, 23959, 12641, 61436, 48071, 26582, 80994, 42077, 64393, 7782, 3445, 22646, 93318, 65831, 73340, 89102, 85037, 71725, 90428, 48554, 28790, 87336, 71782, 83449, 19087, 37673, 64343, 34128, 53228, 77900, 41569, 74935, 47660, 75089, 76263, 40981, 37516, 70701, 11643, 40913, 7456, 68493, 88418, 46287, 70366, 2095, 88075, 71615, 97876, 78123, 33546, 5584, 29162, 20595, 89071, 45653, 30976, 40817, 16216, 22219, 371, 84290, 24694, 74359, 59328, 64500, 71940, 32645, 34556, 42664, 16631, 44617, 86691, 76724, 45645, 25412, 30073, 28636, 15200, 73698, 746, 36679, 10160, 46758, 69325, 14135, 14245, 57202, 25904, 82140, 39271, 3235, 89268, 38543, 2677, 96818, 93935, 70458, 47607, 30562, 72506, 86339, 25655, 10876, 61843, 86794, 53844, 52509, 54806, 37663, 61711, 3691, 72382, 58650, 49932, 51142, 52567, 24758, 3001, 51018, 32960, 41239, 17152, 20555, 62645, 66478, 41219, 50658, 88226, 21139, 81430, 62308, 49348, 66938, 83561, 71779, 45497, 31410, 19019, 27395, 14627, 18557, 18936, 26266, 82543, 80289])",np.log(1 + np.abs((np.exp(np.exp(3))/((np.tanh(2) - np.sin(np.sqrt(np.abs(LSTAT)))) * np.log(1 + np.abs((np.sqrt(np.abs(np.log(1 + np.abs(CRIM))))/(np.sqrt(np.abs(np.sin(np.exp(8)))) * (np.sqrt(np.abs(2)) + (np.tanh(0)/np.tanh(CHAS))))))))))),"{<class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 30, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'int'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 1}"
39.103865510148594,37.922414933995974,2,boston_housing,"Genotype(dna=[4126, 75786, 94128, 45711, 45423, 45059, 72339, 16066, 91273, 17394, 8708, 18195, 30619, 16772, 66352, 43895, 83147, 69582, 33920, 29455, 91624, 6356, 13429, 64853, 9420, 79235, 10949, 81049, 17946, 69434, 4483, 26237, 74661, 11184, 96235, 50497, 13517, 88093, 76518, 27871, 34748, 89908, 45360, 70222, 94428, 52926, 49164, 68576, 57716, 72713, 86506, 67182, 21444, 57156, 28028, 98783, 61618, 9105, 99460, 44622, 9167, 61709, 19016, 40640, 27251, 85854, 37392, 94206, 30508, 9955, 70966, 52218, 73162, 5128, 60747, 6585, 56757, 6157, 79224, 62560, 52998, 58909, 25332, 75591, 29216, 71353, 64098, 15394, 57413, 57369, 81611, 67317, 70273, 7911, 43000, 3371, 81300, 89365, 71637, 28140, 97854, 32327, 24368, 66974, 21295, 98657, 94552, 96458, 36323, 58900, 7289, 26931, 1850, 66031, 99454, 50583, 71431, 10260, 82931, 99055, 16898, 22318, 18953, 87438, 55517, 54607, 50464, 32667, 9146, 61983, 56171, 54107, 22593, 14613, 84062, 58599, 92921, 71010, 83085, 31406, 72642, 44316, 97972, 10121, 36215, 44047, 83571, 56536, 82570, 4591, 46181, 68287, 21399, 12720, 89209, 92097, 88466, 9183, 13844, 39260, 31084, 37129, 93590, 84861, 58828, 76148, 55518, 36843, 33006, 52663, 1646, 60032, 75708, 94173, 61461, 64338, 13369, 63563, 98327, 87510, 90679, 12869, 20295, 74128, 56257, 61998, 57611, 53129, 84102, 75946, 44617, 84679, 35304, 63737, 37755, 38315, 45376, 49849, 50357, 44429, 82273, 54512, 75450, 11522, 66604, 94230, 23000, 9356, 92871, 8272, 80540, 10764, 94278, 39690, 73778, 32341, 99840, 10523, 58761, 34894, 26529, 79741, 99246, 58871, 71765, 88781, 15093, 71757, 59218, 3800, 36299, 67688, 30883, 28342, 80076, 55255, 93625, 46942, 39426, 92555, 54444, 57856, 15326, 99969, 4083, 55196, 98745, 93936, 66705, 96287, 46887, 86110, 38408, 39573, 61074, 36821])",np.exp((np.sqrt(np.abs(9)) - (np.sqrt(np.abs(np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - LSTAT))/np.exp(np.exp(np.sin(6))))))))/np.tanh(np.sin(5))))),"{<class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'str'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 20, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0}"
24.241322072252153,23.268361150353936,9,boston_housing,"Genotype(dna=[72793, 10662, 20365, 95619, 42424, 49497, 66749, 32304, 79048, 32504, 35005, 57346, 5321, 19941, 44919, 38862, 45737, 15863, 57446, 79540, 99373, 60701, 22904, 8103, 87130, 81481, 75725, 28543, 83438, 18613, 41970, 66583, 3777, 62326, 99666, 25218, 92692, 70108, 24418, 72956, 35415, 36591, 67003, 86316, 86287, 69214, 3451, 91529, 24447, 28155, 29397, 28131, 16727, 11374, 19987, 32690, 13183, 49684, 63841, 9788, 10649, 65230, 51509, 84711, 53776, 38897, 16964, 51499, 29528, 89338, 50685, 26061, 21736, 94687, 59775, 87939, 54523, 32655, 78245, 822, 14055, 58501, 97129, 18557, 16380, 50094, 10361, 2942, 12252, 12074, 72128, 52047, 17904, 44288, 52356, 50671, 25751, 87807, 36652, 98423, 77702, 212, 62256, 70058, 31628, 29297, 13546, 54906, 78966, 90308, 6181, 91766, 14560, 94058, 93173, 86430, 6574, 88150, 69600, 50571, 67097, 70068, 48346, 69783, 69232, 33293, 91917, 893, 94313, 13490, 15559, 20701, 68927, 67894, 56743, 52758, 72211, 76642, 21380, 91011, 22796, 67675, 76180, 9097, 76538, 38468, 29238, 22581, 69372, 10104, 66986, 19854, 58276, 687, 25725, 24966, 96029, 51199, 78607, 59161, 94421, 88990, 94440, 53014, 47255, 57430, 6224, 72456, 80729, 84799, 81476, 29481, 96528, 93538, 20312, 78498, 48753, 72762, 82642, 13472, 90485, 57643, 55831, 56535, 3190, 22377, 46368, 70248, 4536, 64337, 38966, 36297, 79220, 19058, 65936, 67626, 72403, 71987, 24673, 82473, 64079, 76639, 37174, 37582, 70104, 80454, 94738, 84037, 87555, 41842, 45592, 19108, 14154, 14860, 19642, 98283, 87196, 25142, 68711, 32785, 34076, 52557, 74799, 80649, 8187, 93937, 4737, 87258, 32767, 56382, 80092, 20503, 83600, 44612, 80686, 20567, 12812, 82089, 24697, 14813, 7334, 23706, 76366, 92861, 86077, 83058, 14124, 51492, 94142, 50209, 4419, 61532, 64750, 68150, 35237, 78196])",(9/np.sin(np.sin((np.sin((np.log(1 + np.abs(((LSTAT/RM)/np.log(1 + np.abs(LSTAT))))) * np.log(1 + np.abs(np.log(1 + np.abs((3/1))))))) - (np.tanh(((PTRATIO - 6)/np.sqrt(np.abs(np.sqrt(np.abs(8)))))) - np.tanh(5)))))),"{<class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 30, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'int'>: 6, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
45.50655540232332,37.58944633838558,22,boston_housing,"Genotype(dna=[49716, 8054, 99972, 60372, 51876, 30848, 42419, 57982, 84536, 80189, 55216, 290, 52578, 90744, 91381, 39222, 66545, 78299, 4760, 40101, 46993, 44589, 54014, 23133, 61325, 88725, 6473, 72188, 81665, 83429, 61062, 97087, 52666, 15207, 41487, 39821, 57660, 3163, 44752, 48045, 7190, 45706, 66271, 51501, 62051, 98155, 12369, 26097, 15581, 83772, 10865, 47224, 60495, 75757, 43911, 83589, 98635, 54715, 14745, 36550, 90687, 14126, 10490, 28394, 47231, 55559, 46581, 98270, 40495, 33903, 6219, 45891, 78000, 58597, 98292, 50777, 71646, 93497, 17423, 37407, 94522, 3493, 40434, 57150, 44544, 97080, 27978, 16235, 82459, 16925, 58485, 19577, 76102, 34306, 4178, 9553, 7987, 79597, 38157, 24342, 73991, 56883, 52670, 69930, 61253, 6693, 66848, 66260, 30488, 40847, 59147, 97418, 80508, 68342, 60324, 74836, 6549, 41, 3549, 69941, 56737, 10322, 23312, 22930, 60901, 5890, 72931, 7244, 27211, 19169, 85920, 890, 22753, 92369, 34605, 52685, 92342, 25882, 23162, 68863, 32954, 12201, 93070, 92008, 41147, 95263, 95587, 10797, 23224, 92827, 79191, 29768, 58603, 27311, 60234, 44003, 51353, 43280, 74426, 24322, 86682, 3116, 30897, 34076, 63140, 95255, 42359, 75633, 47805, 47081, 30605, 86011, 25072, 27223, 12167, 62256, 55588, 8767, 33677, 96706, 25707, 19538, 13637, 47440, 27423, 25581, 68771, 36193, 1526, 14882, 15112, 83770, 87184, 84045, 6967, 62639, 22584, 93106, 92025, 45550, 49506, 63111, 59220, 79547, 25365, 60047, 36000, 74724, 12744, 47010, 15579, 29703, 70861, 36355, 26156, 45920, 66738, 82126, 36423, 67712, 31442, 30684, 65961, 72826, 3106, 69182, 65225, 64503, 11730, 37100, 43940, 28329, 56470, 5443, 4865, 7176, 2836, 80469, 14276, 76967, 66514, 89659, 64176, 98032, 36326, 87574, 49396, 69534, 70428, 54023, 60531, 29530, 82861, 5662, 16221, 38514])",(2 * (9 + ((np.log(1 + np.abs(np.exp(8))) - NOX) - np.exp(np.sqrt(np.abs((np.sin(np.sqrt(np.abs((LSTAT - NOX)))) - np.log(1 + np.abs(LSTAT))))))))),"{<class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'str'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 4, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'int'>: 3, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 20, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1}"
66.97374995830566,57.3306339870708,27,boston_housing,"Genotype(dna=[61986, 86847, 81052, 8913, 89430, 95242, 11388, 54547, 70730, 69348, 27512, 40207, 58478, 20032, 13131, 44695, 82412, 41301, 15543, 85558, 22237, 17792, 26247, 99372, 63931, 66179, 24573, 69597, 35780, 93817, 90996, 20616, 53982, 31465, 57456, 14212, 76098, 96842, 46888, 57446, 9765, 83120, 40489, 54488, 69216, 5154, 72512, 53524, 11229, 62958, 73713, 64261, 11404, 22072, 98714, 5930, 74057, 79088, 98223, 54429, 79711, 49835, 15487, 16251, 46901, 39159, 72307, 8661, 76933, 31553, 80150, 10034, 70533, 39040, 31766, 84816, 5667, 95165, 50670, 12721, 20895, 46754, 42538, 77204, 81841, 97911, 55951, 88641, 31599, 45887, 23304, 50479, 5844, 50984, 92099, 16019, 30583, 96174, 57902, 66628, 63247, 75131, 68087, 27336, 40414, 13894, 29808, 37619, 23080, 27487, 24620, 40155, 12025, 46780, 7281, 6528, 40875, 63559, 19392, 22259, 4549, 18370, 92306, 11386, 71105, 38629, 18755, 36731, 89700, 25490, 92910, 13239, 57803, 20382, 79213, 65826, 94856, 2627, 57969, 55474, 48807, 36036, 42961, 19541, 39818, 87558, 7904, 78070, 59385, 16624, 78741, 84295, 79409, 55948, 84159, 63135, 86512, 86615, 22513, 59780, 24512, 23732, 55781, 22574, 84792, 84440, 56178, 49339, 72802, 10148, 65679, 3639, 41940, 69432, 6778, 22480, 52483, 31549, 10607, 65025, 45070, 48568, 85389, 43378, 41484, 93141, 51585, 87962, 57415, 1312, 72412, 41525, 61773, 12453, 38353, 56531, 11623, 32454, 32635, 31444, 39268, 16153, 72140, 22598, 94960, 47052, 12793, 19321, 96008, 46376, 3593, 19097, 99660, 63878, 24400, 55821, 46947, 55755, 98719, 4004, 44691, 98018, 71539, 35824, 49416, 78589, 58891, 11472, 63787, 29930, 40127, 6642, 5235, 40390, 90737, 67434, 85693, 73298, 78954, 15235, 44541, 14583, 13042, 76242, 49284, 21538, 81449, 21905, 39029, 98036, 31382, 58863, 48935, 97318, 60928, 78365])",(3 * (8 + np.tanh((2 + (((np.sin((1 * RM)) - np.sqrt(np.abs(CRIM))) * np.tanh(np.log(1 + np.abs((RAD/7))))) * 6))))),"{<class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Number'>: 22, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1}"
37.61803041593562,35.905062561749396,18,boston_housing,"Genotype(dna=[95863, 15226, 56739, 49382, 32862, 61157, 22791, 1913, 52458, 52882, 78298, 4681, 3448, 76804, 67511, 23603, 63896, 61574, 67090, 60310, 36564, 1905, 8446, 21390, 89639, 16968, 29766, 47073, 87932, 9645, 87163, 63896, 94701, 85202, 86821, 92202, 57789, 87165, 73957, 42793, 64981, 4951, 21020, 2487, 6222, 41272, 66404, 66710, 91267, 4927, 96337, 35341, 83499, 58270, 7413, 15682, 23882, 10644, 9216, 9091, 99710, 44067, 55034, 46809, 44435, 50476, 93006, 49304, 11212, 19588, 58503, 21774, 11043, 14962, 45286, 3111, 14471, 12055, 20381, 42402, 70138, 23881, 14148, 31235, 26473, 45923, 2056, 44889, 37490, 72907, 47384, 17603, 29422, 69018, 91177, 95515, 70106, 45674, 82985, 80160, 28219, 8452, 68241, 48862, 55472, 86884, 71340, 69086, 25601, 30155, 19548, 54849, 56926, 17081, 44048, 40534, 1532, 20819, 30772, 84797, 49592, 5372, 45582, 62236, 84467, 9115, 77718, 3485, 73524, 96684, 81063, 16517, 86007, 24860, 59740, 86098, 80972, 63420, 91636, 35577, 98304, 11349, 92906, 56644, 95045, 74876, 51798, 40831, 626, 78816, 42860, 44771, 43380, 82015, 19175, 77894, 13540, 13915, 15071, 37297, 39358, 67363, 35538, 79634, 20923, 40233, 81028, 79849, 31231, 89812, 37493, 94320, 85370, 44494, 71508, 90043, 53027, 42357, 45079, 61241, 74979, 65443, 75671, 42137, 96996, 31495, 72740, 59942, 63946, 49474, 58598, 77707, 57638, 12018, 72753, 6976, 4377, 78004, 65103, 81779, 67734, 23708, 31590, 31675, 37438, 8470, 87679, 16246, 77161, 65068, 95166, 70844, 86741, 79352, 19273, 45133, 74800, 67431, 25659, 49529, 57784, 64379, 85766, 70456, 81026, 27872, 23907, 17172, 55366, 69631, 60891, 51408, 99057, 12314, 40697, 81468, 78799, 49647, 46088, 11139, 32181, 97083, 6021, 86642, 85359, 54764, 10741, 15754, 38519, 99185, 77194, 60071, 62833, 61715, 57316, 28637])",(((RM/np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(LSTAT))))))) - np.sqrt(np.abs(CRIM))) * 3),"{<class 'geneticengine.grammars.sgp.Number'>: 11, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'int'>: 1, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3}"
44.04978782474202,40.336506604539096,29,boston_housing,"Genotype(dna=[44623, 69300, 88645, 62024, 56929, 8127, 83023, 40690, 86286, 21487, 28160, 80646, 57019, 35240, 942, 39710, 90665, 70092, 50923, 4540, 82431, 53201, 79643, 93078, 28360, 18776, 68560, 20079, 76342, 91110, 95814, 92508, 52882, 14918, 57072, 89342, 20851, 40916, 75512, 63413, 28069, 31688, 62891, 31683, 39461, 99564, 40053, 56973, 30390, 38111, 70337, 84150, 30895, 8253, 63772, 50325, 42828, 8766, 52291, 83946, 53665, 76689, 87352, 85677, 98495, 42761, 77422, 69833, 47222, 38499, 98064, 11217, 82160, 98039, 65077, 7300, 58678, 10236, 13778, 58431, 99056, 50519, 90704, 98524, 88523, 98486, 69616, 53983, 41223, 31165, 11538, 70145, 33177, 70438, 1251, 69496, 10176, 19978, 40423, 44192, 92350, 97015, 24535, 13453, 15649, 79041, 27323, 85847, 9702, 20857, 27203, 75556, 13442, 51321, 73397, 49815, 84034, 58193, 99949, 46135, 72109, 19313, 15157, 50765, 50413, 18255, 89933, 35617, 95706, 16821, 70902, 76872, 97866, 55757, 79679, 35221, 86419, 20159, 80127, 93504, 63395, 55787, 78475, 81708, 72746, 49272, 82584, 67487, 17810, 35979, 37989, 95534, 50065, 70225, 2520, 64848, 21070, 24094, 82920, 76862, 72942, 93834, 18434, 54966, 8712, 66047, 13236, 20112, 60232, 44043, 53025, 49425, 50483, 95334, 37224, 2643, 25313, 3466, 88026, 97338, 15078, 8725, 69912, 62483, 34165, 4696, 81731, 97095, 94132, 72833, 12950, 6397, 33005, 8383, 16510, 70875, 52961, 10559, 17511, 92197, 86395, 2, 10571, 17635, 55481, 8984, 32859, 59859, 18077, 18503, 95795, 89054, 41903, 22998, 42541, 80005, 41316, 26427, 54951, 61926, 38439, 98951, 16431, 51161, 46263, 32633, 1418, 87477, 37596, 54617, 47728, 12784, 41496, 11051, 93152, 23589, 23793, 77210, 42919, 19057, 13639, 30639, 88773, 22233, 82192, 42076, 34588, 41494, 88312, 83269, 90246, 19582, 55595, 13253, 69806, 51197])",(np.exp(np.sqrt(np.abs(7))) + np.sqrt(np.abs(((0 * ZN) - np.exp(np.exp((((0 + np.sin(RM))/np.exp((0 * AGE))) + np.sin(8)))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'str'>: 3, <class 'int'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 23}"
41.13068822594171,34.163759869768775,19,boston_housing,"Genotype(dna=[59811, 17540, 41429, 95144, 52115, 19337, 27576, 41241, 60213, 96615, 67490, 13090, 21288, 55699, 20780, 84171, 54651, 89581, 95938, 45899, 48760, 37999, 33487, 87410, 84493, 12339, 80303, 26010, 59865, 40821, 38450, 81141, 8761, 79818, 6518, 75156, 65485, 24783, 23731, 66103, 54539, 3659, 56817, 42316, 95114, 30483, 59637, 4303, 77959, 75843, 38018, 7979, 64677, 48252, 64603, 15686, 47546, 82049, 53083, 18185, 24306, 22457, 9075, 25981, 69580, 36279, 74603, 2673, 28170, 96464, 28527, 74250, 43889, 18536, 81630, 71217, 78312, 58909, 43661, 97314, 50869, 81604, 5421, 56507, 75173, 60072, 91367, 94736, 87968, 24852, 80578, 25896, 66021, 19468, 26600, 57322, 48414, 91960, 31058, 90965, 18963, 87258, 80047, 45719, 25457, 61718, 22430, 9979, 94659, 95733, 70323, 6511, 99229, 51497, 85757, 51854, 96988, 2259, 77037, 85934, 73452, 12449, 47689, 69338, 27761, 72532, 45206, 84987, 1456, 70611, 7546, 62446, 74606, 41025, 39755, 74637, 63100, 67515, 75826, 8686, 87417, 42153, 6958, 70137, 54003, 48915, 29959, 54620, 52395, 95637, 75508, 8077, 45257, 48851, 27098, 45930, 98529, 6782, 52671, 36131, 70655, 65922, 92877, 57134, 81727, 27920, 30226, 1528, 81873, 71793, 60264, 8899, 28669, 37709, 54848, 13779, 61262, 31704, 28410, 1653, 72076, 5907, 14096, 15619, 96837, 27253, 85063, 51810, 94644, 18012, 75231, 93858, 33005, 66359, 28863, 7079, 3132, 32352, 28505, 55748, 585, 63038, 68630, 16584, 61068, 49268, 93161, 43780, 56138, 57623, 6991, 75505, 99483, 47518, 59297, 45890, 96081, 49766, 46857, 99973, 62762, 45331, 25895, 75736, 30845, 16910, 36256, 94158, 6264, 36081, 67980, 74873, 10928, 65439, 74525, 84493, 68350, 80992, 32719, 88702, 67940, 2096, 10009, 6703, 871, 70497, 44202, 89071, 20146, 66541, 61100, 70281, 87463, 2978, 78974, 22404])",np.sqrt(np.abs((B/np.log(1 + np.abs(np.log(1 + np.abs((np.log(1 + np.abs((LSTAT * (np.sqrt(np.abs(1))/(B/PTRATIO))))) * LSTAT)))))))),"{<class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 16, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.474563197150154,36.149035681715624,0,boston_housing,"Genotype(dna=[94010, 73436, 10127, 90941, 39143, 52285, 5110, 56643, 9635, 30635, 84453, 74558, 32455, 53123, 80514, 36444, 37721, 60744, 97469, 65310, 14488, 69939, 65211, 62178, 59286, 42787, 38344, 98703, 31678, 270, 47626, 38556, 43917, 43041, 55134, 65652, 52952, 33012, 66202, 6471, 55547, 92086, 60625, 56915, 81450, 50087, 77508, 21741, 39192, 71377, 2915, 89530, 7371, 14257, 86995, 55677, 44140, 2805, 53668, 89324, 97972, 47961, 70207, 30089, 51977, 96326, 38226, 67934, 64063, 54975, 40752, 44619, 67713, 54986, 78559, 37165, 31732, 30715, 92045, 94168, 33285, 32822, 95309, 14118, 22242, 84800, 6787, 98496, 90583, 15934, 91105, 90141, 20082, 87866, 97662, 5643, 18636, 74182, 68926, 14907, 77607, 49961, 23594, 20246, 17816, 30853, 6991, 56725, 55853, 80842, 58552, 4111, 66258, 28230, 45295, 50016, 50902, 68126, 28225, 99802, 27977, 41701, 71893, 75328, 71379, 75676, 76774, 63828, 78261, 26167, 46607, 13899, 94070, 5805, 47156, 11425, 31638, 61989, 60829, 51532, 46122, 36755, 56709, 48122, 27515, 3338, 24551, 8626, 2060, 8830, 99449, 54377, 55996, 93617, 56840, 66115, 497, 58210, 59075, 99129, 16028, 40014, 75511, 98422, 73025, 80147, 8348, 22866, 43758, 79541, 39690, 45103, 50334, 43145, 27317, 55858, 77958, 89506, 45893, 88510, 94689, 75857, 98122, 79963, 36981, 9062, 83163, 79101, 51790, 49627, 60888, 57791, 32532, 75861, 58336, 39362, 73911, 44755, 93335, 84587, 12343, 51298, 24875, 28391, 7519, 87399, 52060, 48174, 63025, 1695, 63894, 31411, 5603, 52033, 6574, 17530, 9514, 82069, 2103, 80764, 19348, 97803, 29577, 47425, 39684, 7817, 29897, 27600, 25211, 50801, 10894, 20401, 20940, 42978, 14350, 30179, 85532, 13162, 60294, 9101, 45852, 17941, 32303, 65817, 12562, 17084, 50845, 272, 94493, 41815, 34482, 93987, 25734, 13863, 77125, 7878])",(np.exp(3) + (np.sqrt(np.abs(5)) * (np.sqrt(np.abs((RM + RM))) + ((np.tanh((((LSTAT - 7) - np.tanh(PTRATIO))/np.sqrt(np.abs(np.exp(7))))) * np.tanh((2 * (1 - np.sin(5))))) * (np.sqrt(np.abs(8)) - PTRATIO))))),"{<class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 4, <class 'geneticengine.grammars.sgp.Mul'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.Tanh'>: 3}"
34.41622266639193,27.94838472005634,12,boston_housing,"Genotype(dna=[47304, 46389, 1531, 19672, 34054, 29790, 36176, 40390, 942, 76432, 48594, 80951, 43541, 25756, 12653, 11202, 96070, 80645, 45097, 87900, 78238, 10013, 30704, 65967, 11221, 86084, 28735, 95926, 96417, 36970, 54774, 13351, 29551, 17173, 87842, 78248, 27019, 84621, 77365, 26822, 40601, 2540, 61158, 6487, 96973, 5164, 17741, 48039, 73549, 63863, 81601, 72358, 67510, 90640, 55415, 82260, 9118, 14692, 65776, 87463, 5565, 56667, 73648, 47117, 58658, 74844, 11706, 60517, 60781, 38644, 74944, 24670, 50121, 67455, 6303, 78234, 28810, 29819, 49212, 22694, 26614, 96292, 90951, 63527, 47520, 42990, 91276, 47744, 49856, 9403, 29282, 25931, 67658, 68793, 19049, 24079, 64279, 35720, 14040, 91361, 2034, 10568, 79597, 41555, 76375, 77126, 71078, 6853, 11485, 14550, 51253, 77709, 99416, 5466, 62762, 69999, 25748, 96664, 70163, 65654, 28291, 7926, 411, 47663, 57888, 94451, 3751, 35480, 68589, 17537, 45469, 22349, 98890, 98794, 61481, 48614, 41784, 80340, 95383, 21512, 68325, 95318, 11358, 93918, 2431, 92514, 97789, 17290, 24323, 12774, 6566, 57762, 96668, 87940, 16393, 31727, 54580, 8941, 68001, 66594, 8383, 17322, 76678, 16485, 2650, 22724, 47454, 50535, 88033, 51634, 49430, 96510, 49881, 92538, 97558, 8295, 14625, 35525, 6299, 69915, 33173, 2769, 72466, 56484, 58385, 71821, 72926, 79930, 88233, 18432, 8817, 8587, 16276, 78360, 93319, 67699, 12302, 71735, 9650, 88360, 85689, 40312, 41064, 4095, 87955, 67340, 69488, 33795, 60931, 16948, 8325, 62880, 13632, 3205, 18153, 34570, 28778, 90736, 99466, 41489, 26283, 77298, 22114, 22826, 35496, 61429, 16613, 80157, 98007, 81999, 59023, 64830, 59523, 38383, 49607, 88766, 64543, 6489, 97311, 36111, 6970, 45007, 35948, 45699, 25877, 55066, 17896, 68671, 53157, 51797, 84506, 80882, 13143, 79346, 25718, 66705])",((4 * (np.sin(np.tanh(np.exp(4))) * ((NOX/0) * 7))) * np.log(1 + np.abs(np.sqrt(np.abs(((((np.tanh((7/4)) - np.sin(CRIM)) + np.exp(RM))/np.tanh((1 * np.log(1 + np.abs(np.tanh(AGE))))))/TAX)))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 5, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 34, <class 'geneticengine.grammars.basic_math.Exp'>: 2}"
29.88690686504296,25.47940107325992,4,boston_housing,"Genotype(dna=[8079, 72415, 7695, 70834, 37302, 46620, 23568, 9860, 57945, 95668, 58348, 35646, 39797, 95681, 22475, 35299, 25976, 86948, 47874, 55773, 60148, 58216, 27290, 4764, 70819, 54320, 53373, 13303, 7487, 37574, 81977, 55351, 48236, 24804, 35409, 40768, 57995, 37534, 47003, 89836, 95046, 55264, 20719, 16472, 57164, 19629, 26784, 91361, 68890, 47859, 81790, 4937, 65839, 80587, 73840, 26463, 84639, 46817, 58119, 84251, 42363, 67409, 25482, 619, 37974, 53970, 64871, 39113, 94288, 19933, 55673, 44422, 24376, 31169, 54774, 93583, 43642, 73669, 62860, 6542, 56321, 24478, 59443, 97904, 18191, 68086, 42363, 80888, 78257, 69629, 15029, 51136, 33736, 73790, 91946, 1877, 75395, 73539, 28784, 55810, 52050, 4092, 68210, 50381, 98941, 55052, 83328, 72139, 33307, 51852, 36078, 12416, 21977, 51875, 42301, 83153, 12472, 68256, 89628, 90577, 96831, 33928, 72083, 58493, 62797, 94740, 70147, 91669, 65221, 10841, 21686, 88028, 94993, 58229, 22804, 71215, 11660, 16744, 23454, 65427, 98460, 38228, 74378, 36324, 19858, 2362, 30113, 96622, 82884, 88480, 20963, 5864, 47563, 54872, 78983, 24275, 65336, 57451, 43802, 81503, 57884, 81815, 54921, 83232, 46346, 57809, 96683, 86907, 77995, 96777, 54259, 23366, 70109, 1272, 10210, 16011, 55309, 47789, 84450, 8128, 9189, 75879, 13535, 48076, 86261, 58242, 10950, 96444, 90249, 58812, 90078, 99495, 10990, 51909, 66012, 55264, 58288, 52705, 73781, 88955, 7839, 75735, 51558, 38704, 94605, 9677, 80474, 9415, 42236, 25821, 20382, 31348, 3716, 66605, 34208, 22973, 3957, 7888, 42433, 82185, 88034, 32901, 19246, 11117, 11767, 16137, 97958, 30452, 75448, 95412, 55515, 8226, 17435, 85438, 71133, 37959, 98230, 92787, 3956, 9899, 92324, 77045, 62446, 64181, 72560, 67758, 11713, 46722, 70665, 20097, 3074, 97083, 42073, 26147, 78282, 63376])",(np.sqrt(np.abs(RM)) * (np.sqrt(np.abs(5)) * (6 - np.log(1 + np.abs((((NOX + ((6/4) * (3 - LSTAT))) * np.tanh(PTRATIO))/(np.log(1 + np.abs(((CHAS * AGE) + np.sqrt(np.abs(9))))) - CHAS))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 5, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 31}"
41.91160690799605,33.012581281803016,15,boston_housing,"Genotype(dna=[44422, 67091, 35963, 26808, 86895, 35797, 78060, 11529, 95448, 71352, 26755, 77087, 67198, 39937, 50145, 87285, 86773, 42819, 8557, 83012, 16424, 65741, 72448, 66183, 52786, 41592, 2508, 52463, 49479, 51896, 79518, 79021, 48472, 86815, 62376, 12752, 94863, 84114, 13747, 57770, 50495, 51700, 30831, 70857, 21568, 26701, 16763, 26511, 55872, 60260, 42923, 99953, 45611, 40584, 8643, 11697, 23093, 35916, 66727, 85087, 97247, 90651, 2440, 24934, 78561, 77439, 85725, 93915, 49358, 55367, 15321, 6264, 22997, 40549, 19683, 70458, 93759, 48739, 37158, 44462, 67521, 21297, 49050, 74515, 69478, 82222, 45536, 74425, 58201, 25367, 85235, 73736, 6512, 64000, 98217, 16063, 43750, 70914, 38479, 70329, 78482, 33259, 5737, 41365, 18678, 98495, 56886, 33471, 14310, 52130, 62392, 27349, 16171, 54575, 43023, 28930, 75992, 5238, 1311, 97152, 64426, 58352, 62591, 98607, 86063, 54109, 29882, 87057, 7510, 10187, 79230, 69390, 5044, 71332, 27546, 90788, 95303, 61566, 48663, 45165, 91898, 53391, 1999, 61281, 4109, 9902, 27730, 52767, 24944, 65974, 88031, 77925, 33589, 29391, 39672, 1474, 85177, 73662, 13497, 58367, 11947, 9600, 70767, 20012, 69674, 21378, 62624, 822, 2044, 61349, 54743, 42642, 12579, 99559, 97898, 98706, 9724, 71566, 25671, 63949, 83471, 82117, 86253, 64907, 73371, 57389, 78346, 1507, 97056, 31688, 6821, 42573, 42399, 86713, 78415, 29251, 28080, 5530, 29481, 44004, 79879, 35976, 94994, 64005, 79194, 22807, 71920, 33052, 74402, 83094, 34316, 12945, 59343, 26798, 91124, 35164, 89605, 56934, 52714, 7710, 85670, 50103, 11750, 1413, 69900, 43655, 47717, 3205, 18230, 95807, 81375, 69801, 47723, 47760, 16225, 81265, 47702, 83963, 20324, 3875, 46630, 60794, 98994, 29703, 70618, 47460, 36687, 7376, 21544, 17290, 14157, 90178, 51443, 65727, 25066, 55260])",(8 * np.sqrt(np.abs((9/(np.sqrt(np.abs((np.log(1 + np.abs(np.log(1 + np.abs(np.exp(CHAS)))))/PTRATIO))) - np.log(1 + np.abs(np.sqrt(np.abs((LSTAT - np.exp(np.sin(8)))))))))))),"{<class 'geneticengine.grammars.sgp.Number'>: 20, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'examples.boston_housing.Literal'>: 3, <class 'str'>: 3, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
34.398158300279015,33.11557583999964,25,boston_housing,"Genotype(dna=[4608, 10078, 4162, 88645, 78451, 29018, 67464, 58097, 81551, 98351, 90557, 7619, 97802, 32975, 56448, 72369, 75431, 83484, 45673, 31746, 2779, 73706, 3633, 93653, 53956, 53716, 10207, 33585, 57698, 52569, 16046, 75209, 22018, 85923, 46509, 29216, 76774, 25625, 63985, 70108, 41151, 89634, 81737, 59144, 32438, 67195, 30105, 68140, 15139, 81609, 50267, 8052, 64449, 20450, 12748, 99870, 8864, 3472, 69850, 48963, 69552, 45568, 96038, 72885, 17306, 13196, 32688, 30064, 14418, 83854, 4641, 67923, 48364, 4689, 92762, 74953, 42875, 93828, 46411, 7113, 4012, 45085, 93865, 47318, 34739, 95045, 54515, 58070, 78572, 39793, 51217, 51770, 93322, 53100, 62266, 17012, 20973, 72781, 59601, 14868, 81832, 27389, 92753, 80094, 12196, 98281, 48131, 34113, 23707, 61360, 71474, 74003, 24188, 87394, 73747, 44798, 21149, 63901, 84626, 38610, 37556, 26029, 3316, 53800, 56643, 72526, 70176, 9934, 85180, 34750, 55861, 47876, 79866, 78112, 33562, 3137, 32895, 44394, 38323, 59393, 2887, 25784, 29299, 15914, 38346, 79167, 36414, 47009, 2034, 44582, 36907, 85028, 34459, 93187, 32996, 85611, 96247, 36407, 41594, 8860, 6750, 99389, 63202, 30795, 52051, 57583, 44117, 20421, 35608, 26599, 58953, 97445, 47826, 20673, 18377, 69459, 48092, 63640, 63463, 36690, 12193, 35914, 89097, 43958, 42967, 37488, 91924, 54807, 4560, 63211, 38631, 42427, 64426, 32259, 25823, 36741, 14977, 75631, 79306, 2553, 57315, 81915, 91156, 67688, 33682, 14975, 91358, 27844, 7047, 72109, 77501, 7000, 34048, 68181, 5463, 30601, 22383, 70417, 10566, 94922, 50152, 41070, 7813, 62877, 65211, 23079, 658, 49421, 87793, 13851, 86716, 69259, 59785, 94485, 66226, 209, 68759, 65918, 10829, 62474, 7910, 82252, 96729, 97014, 36928, 80664, 63524, 18104, 19959, 59410, 15058, 90781, 4071, 88281, 82115, 32305])",(5 * np.log(1 + np.abs(((np.sqrt(np.abs(np.sin((ZN + (np.sin(9) - 4))))) - ((np.exp(np.sqrt(np.abs((AGE/7)))) + (((9 + 3)/(4 - LSTAT)) * AGE)) - np.sqrt(np.abs(np.exp(np.sin(np.log(1 + np.abs(PTRATIO)))))))) + np.sqrt(np.abs(((np.sin(((8 + 4) + np.exp(3))) + np.log(1 + np.abs(np.sqrt(np.abs(np.sin(CHAS))))))/np.exp(np.exp((np.sin(1) - np.tanh(9))))))))))),"{<class 'geneticengine.grammars.sgp.Number'>: 55, <class 'geneticengine.grammars.basic_math.Exp'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Sin'>: 6, <class 'int'>: 12, <class 'examples.boston_housing.Literal'>: 12, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 5, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 7}"
30.0853456869931,24.011857812215148,13,boston_housing,"Genotype(dna=[38962, 20670, 57092, 96135, 1797, 95295, 8219, 47857, 67344, 90100, 68943, 95553, 60371, 62478, 64149, 65021, 2703, 94617, 73343, 49250, 97785, 11261, 89659, 18309, 14907, 4944, 86065, 60530, 6741, 3473, 88448, 70257, 10451, 83855, 36625, 90815, 75758, 2420, 11054, 4579, 76164, 20560, 94477, 44391, 4184, 4421, 80406, 62983, 83139, 73748, 92456, 81620, 94054, 4537, 69976, 36533, 20035, 66149, 21047, 39958, 93820, 73743, 38488, 19031, 61084, 56269, 39492, 7210, 81054, 19798, 17867, 13385, 68052, 58328, 62065, 26000, 22160, 22499, 822, 8402, 67507, 66717, 14878, 43400, 6301, 22015, 12233, 53600, 28774, 99, 43621, 85124, 24838, 87312, 13950, 69505, 69320, 589, 4459, 39666, 33729, 56374, 95106, 73956, 61936, 76562, 51202, 89492, 95636, 95038, 40628, 75338, 24447, 70910, 84143, 87027, 56029, 47284, 69825, 2000, 66431, 90148, 41233, 60616, 21966, 4844, 27826, 17633, 20548, 29207, 93519, 3710, 3152, 72538, 87308, 26936, 13405, 64074, 52590, 30759, 76689, 92154, 49246, 26408, 62199, 47729, 42077, 94517, 27082, 86534, 66756, 74944, 6588, 97345, 3741, 75609, 45636, 64655, 20769, 35342, 82383, 74129, 78873, 65594, 65617, 28659, 31685, 91369, 45521, 48702, 77209, 91195, 67043, 88734, 52772, 40241, 59173, 98539, 22890, 81898, 56022, 63685, 58058, 35846, 16453, 98320, 37604, 81266, 82730, 19239, 78015, 74641, 41635, 87260, 50608, 44439, 517, 85447, 41116, 78756, 30232, 92133, 15415, 67889, 48488, 23482, 32470, 40621, 78405, 8133, 58261, 77930, 79346, 40604, 34749, 37366, 48192, 72865, 93633, 79928, 78088, 91993, 75396, 78967, 6712, 73407, 83961, 13480, 27692, 43843, 81377, 50488, 76847, 26016, 95490, 28835, 35747, 26274, 88520, 50270, 41647, 22249, 54423, 46609, 22704, 42723, 87314, 65061, 12773, 85751, 64719, 81329, 90649, 17187, 92831, 16573])",((np.sqrt(np.abs(5)) * (np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.exp((9/LSTAT)))))) * np.sqrt(np.abs(np.sqrt(np.abs((np.sqrt(np.abs(B))/TAX))))))) * RM)) - np.sin(np.tanh(np.sin(np.sin((((np.sqrt(np.abs(DIS)) * (9 + 0)) - np.tanh(np.sqrt(np.abs(1)))) + np.exp(np.sin((6 - 4))))))))),"{<class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'str'>: 5, <class 'geneticengine.grammars.sgp.Mul'>: 4, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 40, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 4}"
44.615750631788785,55.46633630529242,28,boston_housing,"Genotype(dna=[46955, 50755, 92433, 18948, 70823, 6160, 84791, 87387, 18935, 17708, 6808, 36007, 16421, 27519, 5341, 80341, 25530, 52291, 317, 1113, 47184, 58833, 99046, 77786, 92265, 38449, 47720, 8085, 91667, 78043, 31440, 8060, 50042, 93801, 89842, 9740, 77562, 12072, 74874, 11996, 96907, 54507, 49106, 28874, 15211, 40114, 23640, 8411, 95783, 99396, 5124, 57590, 17722, 63213, 7687, 34056, 78745, 53226, 96402, 10850, 46791, 36368, 67936, 965, 96136, 45701, 15727, 98093, 90873, 50417, 26012, 83042, 22431, 1310, 71093, 12299, 52219, 78979, 73598, 32003, 88658, 36662, 54666, 8666, 30013, 70272, 16455, 93696, 3537, 41522, 54411, 56033, 80364, 3034, 71511, 92807, 22960, 29309, 69184, 44316, 27320, 99597, 31787, 4333, 75335, 68742, 69582, 26321, 62375, 90638, 2155, 84323, 96749, 80612, 31611, 81992, 48674, 84995, 5988, 16305, 39588, 77351, 19233, 35008, 13485, 71204, 81797, 60267, 39369, 37857, 47578, 45759, 95221, 87986, 63957, 16000, 45078, 52572, 30186, 83245, 1828, 78728, 41818, 97639, 94043, 33025, 94123, 67859, 6759, 98411, 46794, 19042, 45146, 85414, 72235, 47155, 10879, 86924, 71321, 57800, 11916, 7295, 71852, 41707, 21628, 16790, 44930, 94030, 80057, 89804, 31584, 54497, 25193, 822, 72582, 23884, 66333, 51705, 14177, 83237, 97143, 18505, 4679, 55890, 91450, 72899, 97877, 17966, 54953, 30661, 56787, 28310, 12443, 6927, 30967, 90851, 91117, 1947, 98654, 75894, 38713, 85488, 30388, 76935, 2435, 7483, 42391, 60659, 75901, 5598, 27772, 75202, 81177, 14844, 47256, 21352, 21585, 42568, 97073, 11379, 43659, 13787, 85465, 89577, 65870, 1749, 37258, 21081, 45619, 27802, 59259, 65224, 9128, 23250, 94632, 57763, 53, 23085, 58012, 66550, 22214, 89925, 25666, 74591, 28791, 57291, 96337, 86670, 4633, 72779, 508, 28628, 84378, 78208, 20501, 65068])",((np.sqrt(np.abs(B)) + ((8/np.log(1 + np.abs(1)))/np.sin(np.sqrt(np.abs(np.sin(np.log(1 + np.abs(np.sin(np.tanh(DIS)))))))))) - LSTAT),"{<class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'str'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'examples.boston_housing.Literal'>: 2, <class 'int'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 17}"
24.37161473348752,24.041574423732747,14,boston_housing,"Genotype(dna=[81700, 6361, 53082, 11869, 71939, 12131, 52601, 3543, 8008, 15335, 38098, 79654, 48111, 51742, 76697, 2372, 83088, 70133, 98484, 86941, 96147, 33359, 89901, 46099, 1517, 26218, 72070, 66168, 61007, 90806, 45748, 50638, 5529, 45027, 87466, 35149, 36042, 19288, 21241, 39063, 49696, 88559, 4662, 4267, 42864, 1959, 4928, 9798, 84152, 72264, 58868, 34510, 49530, 86799, 15229, 50406, 22020, 3078, 27445, 34059, 45908, 41836, 41832, 50409, 9936, 74379, 41689, 11422, 31985, 7429, 41462, 83983, 19581, 25019, 98173, 51716, 11033, 47436, 80434, 4829, 4247, 87816, 39999, 85275, 15168, 20644, 12080, 36968, 56250, 75084, 19576, 57579, 75439, 97942, 89257, 72678, 28597, 73748, 9307, 88290, 39934, 4166, 5132, 67363, 46352, 33310, 60898, 82774, 4404, 59146, 89415, 77750, 50370, 55036, 99239, 86825, 84581, 64345, 82995, 18992, 20206, 63576, 57167, 51150, 20224, 91674, 841, 6081, 64502, 55509, 98512, 30961, 48402, 35176, 26365, 54976, 42193, 25371, 55748, 4054, 5884, 20593, 22101, 91028, 6719, 72480, 48386, 98284, 3519, 76796, 53258, 35720, 60391, 74129, 75544, 61113, 14009, 33160, 93836, 15194, 62420, 19908, 7496, 33286, 67402, 44041, 99244, 45210, 39787, 84595, 91904, 18261, 56126, 96477, 83032, 97536, 49687, 96757, 94122, 63214, 97451, 95974, 92653, 65752, 48591, 77797, 37582, 80603, 85381, 95795, 48106, 28834, 39358, 24057, 48303, 16297, 99340, 23914, 31898, 29453, 54507, 41303, 79063, 59946, 6590, 38040, 69299, 3394, 26795, 64646, 74782, 43765, 72857, 78692, 15076, 67231, 71138, 14005, 78455, 77100, 52386, 65032, 38077, 38416, 3358, 36342, 99709, 91684, 34131, 58458, 56791, 50883, 10084, 17002, 2000, 1617, 36509, 59565, 53110, 94661, 61722, 64305, 39246, 95669, 82991, 76271, 47875, 3974, 35881, 60851, 62975, 13097, 12077, 57811, 18524, 19178])",(np.exp((np.log(1 + np.abs(np.tanh(np.log(1 + np.abs((((4 - INDUS) + AGE) - B)))))) + (np.sin(np.exp(np.exp(np.tanh(np.tanh(PTRATIO))))) - np.tanh((((np.log(1 + np.abs(9)) - 6) - 2)/LSTAT)))))/(np.tanh(np.tanh(np.tanh(np.log(1 + np.abs(np.sin(((2 + 8) - (9/RM)))))))) * np.tanh(np.tanh(((INDUS/np.log(1 + np.abs(np.exp((B/5))))) + 2))))),"{<class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 53, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 6, <class 'str'>: 8, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'int'>: 9, <class 'geneticengine.grammars.basic_math.SafeLog'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 0, <class 'geneticengine.grammars.basic_math.Tanh'>: 9, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5}"
38.09762342750986,29.703202505194948,20,boston_housing,"Genotype(dna=[37417, 9103, 8851, 7052, 34578, 3333, 23961, 13467, 23532, 8959, 3178, 35542, 30721, 7094, 97498, 54834, 82069, 77328, 62273, 46690, 10809, 41697, 86807, 12040, 85998, 86092, 71632, 46822, 81425, 90642, 66047, 55954, 27965, 59811, 95285, 7870, 33668, 10431, 23648, 73918, 88673, 81061, 1612, 33704, 38714, 32992, 37052, 90906, 57929, 68573, 27933, 45730, 34892, 50113, 7243, 76625, 23560, 60943, 26352, 39108, 48064, 81834, 87274, 44776, 32339, 94149, 46965, 52568, 84085, 52793, 52537, 40999, 27839, 26220, 58204, 17218, 86860, 78330, 56196, 89961, 14698, 7899, 25543, 37019, 10929, 56784, 88387, 1075, 63724, 54145, 40205, 99772, 80827, 37173, 32068, 86390, 94409, 42007, 15326, 24692, 25277, 66747, 83681, 43067, 30853, 30351, 38490, 56739, 91972, 79471, 73855, 81354, 79923, 12342, 61483, 45009, 24356, 65607, 35941, 77903, 10741, 17036, 1759, 39285, 6132, 88910, 54645, 29440, 48975, 59212, 75063, 94559, 22087, 28865, 67440, 18024, 62709, 92773, 37899, 33419, 82820, 52551, 17932, 34631, 18384, 69551, 94303, 11964, 33747, 42351, 38335, 3073, 55247, 17398, 90755, 51095, 79077, 25849, 11183, 34674, 91000, 1006, 94671, 56073, 13214, 41491, 99198, 6022, 96301, 95844, 74412, 42597, 6128, 61170, 43237, 47551, 44841, 57355, 16606, 18830, 39302, 69172, 54342, 25025, 57062, 16624, 7015, 95218, 57286, 28901, 94210, 87634, 88856, 67935, 34707, 30587, 33904, 67543, 20419, 89713, 42455, 29775, 43491, 90305, 56317, 36240, 61114, 25872, 1662, 99398, 82829, 2473, 96116, 67765, 4407, 22993, 79442, 49559, 98427, 27365, 93563, 49645, 16270, 40067, 71018, 9222, 38332, 39935, 41380, 53664, 32485, 84874, 36262, 78623, 53309, 515, 5082, 12753, 87175, 75167, 26984, 14517, 49926, 13634, 86534, 35287, 17046, 69266, 56295, 34995, 56340, 91501, 6988, 22259, 98472, 72905])",np.sqrt(np.abs(np.exp((RM - (((AGE/(np.tanh(np.log(1 + np.abs(4))) - np.tanh(np.tanh(DIS))))/np.exp(np.exp(np.sqrt(np.abs(np.sqrt(np.abs(2)))))))/(np.sqrt(np.abs((((5/RAD) * B)/(np.tanh(3)/(4 * 2))))) + 6)))))),"{<class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'str'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'examples.boston_housing.Literal'>: 7, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4}"
33.85363484129237,34.167058360693744,10,boston_housing,"Genotype(dna=[21054, 20416, 81143, 58967, 86094, 54389, 41150, 64482, 23498, 81156, 12151, 24803, 59642, 72249, 93468, 46895, 9928, 24787, 80422, 27404, 88860, 64009, 88534, 47543, 13572, 50609, 18481, 79075, 97824, 98721, 78440, 96091, 16714, 45966, 10359, 48997, 85184, 43741, 97634, 30078, 42039, 7255, 65734, 7120, 3478, 99734, 32264, 19017, 31724, 23844, 2494, 72086, 96706, 1883, 6791, 96585, 60688, 13170, 11511, 35844, 32361, 77122, 33069, 80240, 99558, 53271, 65850, 47556, 32834, 36957, 38470, 1907, 85502, 35599, 25284, 4302, 55155, 49443, 69491, 45899, 85864, 37363, 35033, 83602, 98642, 59562, 3550, 26500, 24652, 46143, 63208, 21431, 98493, 4163, 72878, 7163, 8498, 47553, 83020, 62978, 45885, 90234, 98981, 74685, 12846, 72951, 8208, 16172, 97719, 15121, 65925, 41112, 17797, 78033, 92662, 18372, 52065, 60583, 64181, 22221, 32168, 69482, 79015, 45975, 3113, 42615, 53596, 44892, 97311, 31666, 87441, 97090, 76417, 7373, 73183, 53069, 24008, 38620, 12192, 3464, 85123, 12003, 34556, 60899, 60230, 52839, 46264, 42163, 43977, 74530, 25183, 18297, 83745, 92922, 24805, 21324, 65425, 21186, 47551, 87342, 22771, 99397, 12812, 89930, 39509, 45612, 32174, 15124, 94099, 91466, 5917, 73947, 86526, 58330, 71186, 3917, 68474, 92877, 31540, 14478, 8890, 25764, 59395, 52377, 64696, 95014, 45816, 703, 33671, 77664, 76327, 84105, 79803, 25595, 92330, 74505, 99552, 47886, 37613, 62376, 51064, 10912, 96543, 87544, 39737, 47158, 14228, 59140, 64409, 27242, 62135, 92295, 75362, 68873, 23599, 80265, 36052, 48012, 30537, 69290, 48065, 57292, 69002, 86653, 42558, 96459, 35998, 50163, 12522, 28381, 9362, 58382, 57437, 8046, 33081, 56287, 61594, 38714, 37059, 75537, 65984, 90571, 27099, 42803, 27446, 27049, 89106, 12336, 6954, 33371, 12515, 79950, 362, 24931, 63228, 72937])",(np.exp(np.exp(np.sin(RM))) + ((np.tanh(np.exp(np.tanh((((TAX - NOX) - (9/3)) + np.tanh(np.tanh(TAX)))))) * (np.exp(np.log(1 + np.abs(np.sqrt(np.abs(B))))) - np.sin(((NOX + 9)/np.sqrt(np.abs(np.tanh((4/7)))))))) + (np.exp(np.sin((B/5))) + ((CHAS/np.log(1 + np.abs(((np.sqrt(np.abs(1))/6) - np.log(1 + np.abs(np.sin(7))))))) - np.log(1 + np.abs((np.sqrt(np.abs(((AGE - LSTAT) - np.exp(LSTAT))))/TAX))))))),"{<class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'str'>: 12, <class 'geneticengine.grammars.basic_math.Exp'>: 6, <class 'int'>: 9, <class 'geneticengine.grammars.sgp.Var'>: 12, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 5, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 64, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 7}"
