Fitness,Depth,Nodes,Generations,time_since_the_start_of_the_evolution,seed,Test fitness,genotype_as_str,productions
81.45101079998646,6,14,1,0.8998563289642334,12,44.77720051233769,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(RM)) - (2 - RM))) + np.tanh((CHAS/np.log(1 + np.abs(RAD))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 14}"
81.45101079998646,6,14,2,1.7173192501068115,12,44.77720051233769,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(RM)) - (2 - RM))) + np.tanh((CHAS/np.log(1 + np.abs(RAD))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 14}"
81.45101079998646,6,14,3,2.5473554134368896,12,44.77720051233769,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(RM)) - (2 - RM))) + np.tanh((CHAS/np.log(1 + np.abs(RAD))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 14}"
80.44507118257948,10,22,4,3.2918026447296143,12,60.75396377519835,(np.exp(np.exp(((np.tanh(((np.log(1 + np.abs(9)) + np.exp(7)) - np.exp(np.tanh(7)))) - CRIM) - np.sin(np.sin(np.exp(CRIM)))))) + np.sqrt(np.abs(B))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 5, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 0, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 22}"
48.638885619157165,7,16,5,4.114852666854858,12,35.91873064761836,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(5)) - (2 - RM))) + np.tanh((np.exp(PTRATIO)/np.log(1 + np.abs(np.tanh(2)))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 16}"
48.638885619157165,7,16,6,5.0361247062683105,12,35.91873064761836,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(5)) - (2 - RM))) + np.tanh((np.exp(PTRATIO)/np.log(1 + np.abs(np.tanh(2)))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 16}"
48.638885619157165,7,16,7,5.7878382205963135,12,35.91873064761836,np.sqrt(np.abs((np.exp((np.log(1 + np.abs(5)) - (2 - RM))) + np.tanh((np.exp(PTRATIO)/np.log(1 + np.abs(np.tanh(2)))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 16}"
46.280939628768174,10,24,8,6.654078722000122,12,39.412905258253666,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh((np.exp(RM)/np.exp((9 - 4)))))/np.sin(np.tanh(CRIM))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 24}"
46.280939628768174,10,24,9,7.466036558151245,12,39.412905258253666,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh((np.exp(RM)/np.exp((9 - 4)))))/np.sin(np.tanh(CRIM))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 24}"
42.664314941205156,6,16,10,8.320119857788086,12,36.01041697390958,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(4)/np.sin(1)))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 16}"
42.664314941205156,6,16,11,9.091029167175293,12,36.01041697390958,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(4)/np.sin(1)))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 16}"
39.926653577812914,10,24,12,10.02562403678894,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.926653577812914,10,24,13,10.924277544021606,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.926653577812914,10,24,14,11.676058053970337,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.926653577812914,10,24,15,12.613868474960327,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.926653577812914,10,24,16,13.41269302368164,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.926653577812914,10,24,17,14.362312316894531,12,32.074034949247014,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * ((8 + np.sqrt(np.abs(np.exp(np.tanh((DIS/RAD))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'int'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 24}"
39.05686195806489,10,26,18,15.31971263885498,12,31.380718957266883,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * (((np.tanh(2) * RM) + np.sqrt(np.abs(np.exp(np.tanh(np.exp(0))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 26}"
39.05686195806489,10,26,19,16.200217247009277,12,31.380718957266883,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (np.sqrt(np.abs(B)) * (((np.tanh(2) * RM) + np.sqrt(np.abs(np.exp(np.tanh(np.exp(0))))))/np.sin(np.tanh(B))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 26}"
38.73300661270471,10,46,20,17.126018285751343,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.73300661270471,10,46,21,17.933619022369385,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.73300661270471,10,46,22,18.905104637145996,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.73300661270471,10,46,23,19.979185819625854,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.73300661270471,10,46,24,20.876160383224487,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.73300661270471,10,46,25,21.839555978775024,12,29.094443102992827,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 46}"
38.574264208247094,10,53,26,22.595715522766113,12,28.815139852201625,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + ((4 * np.sqrt(np.abs(np.sin((4/AGE))))) * (np.exp(np.sin((9 + np.log(1 + np.abs(TAX)))))/(((np.log(1 + np.abs((RAD - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.sgp.Number'>: 53}"
38.574264208247094,10,53,27,23.497891664505005,12,28.815139852201625,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + ((4 * np.sqrt(np.abs(np.sin((4/AGE))))) * (np.exp(np.sin((9 + np.log(1 + np.abs(TAX)))))/(((np.log(1 + np.abs((RAD - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.sgp.Number'>: 53}"
38.574264208247094,10,53,28,24.42532992362976,12,28.815139852201625,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + ((4 * np.sqrt(np.abs(np.sin((4/AGE))))) * (np.exp(np.sin((9 + np.log(1 + np.abs(TAX)))))/(((np.log(1 + np.abs((RAD - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.sgp.Number'>: 53}"
38.574264208247094,10,53,29,24.9979510307312,12,28.815139852201625,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + ((4 * np.sqrt(np.abs(np.sin((4/AGE))))) * (np.exp(np.sin((9 + np.log(1 + np.abs(TAX)))))/(((np.log(1 + np.abs((RAD - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.sin(np.sqrt(np.abs(RM))))))/(((3 + RM)/(np.sqrt(np.abs(INDUS))/(6 + 0))) + np.exp(np.sin(np.sqrt(np.abs(4))))))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.sgp.Number'>: 53}"
36.70341015511142,10,42,30,25.59085965156555,12,27.653373924363297,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(DIS)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
36.70341015511142,10,42,31,26.076099157333374,12,27.653373924363297,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(DIS)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
35.739361744276465,10,42,32,26.677648782730103,12,27.02470635977813,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
35.739361744276465,10,42,33,27.250253438949585,12,27.02470635977813,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
35.739361744276465,10,42,34,27.748571634292603,12,27.02470635977813,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
35.739361744276465,10,42,35,28.3538236618042,12,27.02470635977813,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((1 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 8, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
35.12478743213772,10,45,36,28.91860795021057,12,26.658162485674325,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((((TAX - 4) * (8 + 8))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 10, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 10, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 45}"
35.12478743213772,10,45,37,29.424337148666382,12,26.658162485674325,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((((TAX - 4) * (8 + 8))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.log(1 + np.abs(8)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(INDUS))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 10, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 10, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.sgp.Number'>: 45}"
33.48826310716579,10,42,38,30.001095294952393,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,39,30.537580966949463,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,40,31.129961252212524,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,41,31.682352781295776,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,42,32.16943860054016,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,43,32.7410843372345,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,44,33.27489376068115,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,45,33.744778633117676,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,46,34.36729717254639,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.48826310716579,10,42,47,34.8754346370697,12,26.828286249024274,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((RM - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.483187949372585,10,42,48,35.44080567359924,12,26.818306453102434,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((7 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.483187949372585,10,42,49,36.01846957206726,12,26.818306453102434,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((7 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
33.483187949372585,10,42,50,36.50032711029053,12,26.818306453102434,np.sqrt(np.abs((np.exp((np.sqrt(np.abs(2)) - (2 - RM))) + (3 * (np.exp(np.tanh(np.tanh(np.sin(CHAS))))/(((np.log(1 + np.abs((7 - RM)))/np.exp(np.sqrt(np.abs(B)))) + np.log(1 + np.abs(np.log(1 + np.abs(np.sqrt(np.abs(RM)))))))/((np.sqrt(np.abs(B))/(np.sqrt(np.abs(LSTAT))/(6 + 0))) + 3))))))),"{<class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 42}"
