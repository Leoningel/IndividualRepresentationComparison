Fitness,Depth,Nodes,Generations,time_since_the_start_of_the_evolution,seed,Test fitness,genotype_as_str,productions
76.60802967459135,10,32,1,0.8295426368713379,0,62.5589897273336,np.sqrt(np.abs(((np.exp(np.log(1 + np.abs((np.exp(1) - 2)))) + (B * np.sqrt(np.abs(((CHAS + np.sin(np.exp(NOX))) + np.log(1 + np.abs(((1 - NOX)/np.sin(DIS)))))))))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 32, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
76.55899371136114,10,33,2,1.5969552993774414,0,62.50398916585263,np.sqrt(np.abs(((np.exp(np.log(1 + np.abs((np.exp(1) - 2)))) + (B * np.sqrt(np.abs(((CHAS + np.sin(np.exp(NOX))) + np.log(1 + np.abs(((1 - NOX)/np.sin(DIS)))))))))/np.tanh(np.exp((np.exp(CRIM)/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 33, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
62.34240699463052,8,15,3,2.5596516132354736,0,40.733743028325335,np.sqrt(np.abs(((np.exp(np.sqrt(np.abs(7))) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 15, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
62.34240699463052,8,15,4,3.356905698776245,0,40.733743028325335,np.sqrt(np.abs(((np.exp(np.sqrt(np.abs(7))) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 15, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
62.34240699463052,8,15,5,4.364359617233276,0,40.733743028325335,np.sqrt(np.abs(((np.exp(np.sqrt(np.abs(7))) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 15, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
62.34240699463052,8,15,6,5.199956178665161,0,40.733743028325335,np.sqrt(np.abs(((np.exp(np.sqrt(np.abs(7))) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 2, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 2, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 15, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
61.564619070958244,10,32,7,5.9612205028533936,0,40.19621078343151,np.sqrt(np.abs(((np.exp(np.sqrt(np.abs(np.tanh((np.exp(np.log(1 + np.abs(6))) + ((7/7) + np.exp(ZN))))))) + np.exp(RM))/np.tanh(np.log(1 + np.abs(np.exp((B + (np.tanh(np.exp(B)) + (np.exp(8)/np.sqrt(np.abs(TAX)))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 7, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 0, <class 'geneticengine.grammars.sgp.Number'>: 32, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
61.4374327436603,10,38,8,6.931939125061035,0,40.118754874817796,np.sqrt(np.abs(((np.log(1 + np.abs(np.sin(((((0 * DIS) * np.sin(RM)) - ((1/INDUS)/np.log(1 + np.abs(TAX)))) + (((RAD + 5) - AGE)/np.sin((ZN - CHAS))))))) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 10, <class 'str'>: 10, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 4, <class 'geneticengine.grammars.sgp.Number'>: 38, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
61.38472634203403,10,41,9,7.658214092254639,0,40.08653520999638,np.sqrt(np.abs(((np.sin(6) + np.exp(RM))/np.tanh(((((np.sqrt(np.abs(np.sqrt(np.abs(3))))/(np.sqrt(np.abs(INDUS))/(6 * RM)))/np.exp(TAX)) + ((np.sin((NOX * 5)) * np.exp(np.exp(CHAS))) * np.sin(((0 * RAD)/(AGE + AGE))))) - RM))))),"{<class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 10, <class 'str'>: 10, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 5, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 41, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 5}"
61.37895386507392,10,33,10,8.572139024734497,0,40.08320332358235,np.sqrt(np.abs((((np.log(1 + np.abs((5 + ((8 - ZN) + np.sin(5)))))/((np.sqrt(np.abs(np.sqrt(np.abs(np.sqrt(np.abs(CHAS))))))/(np.exp(np.exp(7)) * (np.exp(4) * np.sin(6)))) - 7)) + np.exp(RM))/np.tanh(RM)))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 4, <class 'str'>: 4, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 33, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
61.31570626873353,10,39,11,9.474777698516846,0,40.01133330125755,np.sqrt(np.abs((((np.log(1 + np.abs((5 + ((8 - ZN) + np.sin(5)))))/(((np.tanh((ZN - 4))/(np.sqrt(np.abs(CHAS)) + 2)) * CHAS)/(np.sin(5) * np.sqrt(np.abs((np.log(1 + np.abs(2)) * (1 * PTRATIO))))))) + np.exp(RM))/np.tanh(RM)))),"{<class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 39, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 4}"
61.31570626873353,10,39,12,10.229055643081665,0,40.01133330125755,np.sqrt(np.abs((((np.log(1 + np.abs((5 + ((8 - ZN) + np.sin(5)))))/(((np.tanh((ZN - 4))/(np.sqrt(np.abs(CHAS)) + 2)) * CHAS)/(np.sin(5) * np.sqrt(np.abs((np.log(1 + np.abs(2)) * (1 * PTRATIO))))))) + np.exp(RM))/np.tanh(RM)))),"{<class 'examples.boston_housing.Literal'>: 8, <class 'geneticengine.grammars.basic_math.Exp'>: 1, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 8, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 39, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 4}"
60.977727056366625,8,16,13,11.342878580093384,0,39.882821612994505,np.sqrt(np.abs((((6/np.sin(4)) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 16, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
60.977727056366625,8,16,14,12.068578004837036,0,39.882821612994505,np.sqrt(np.abs((((6/np.sin(4)) + np.exp(RM))/np.tanh(np.exp((6/np.sin(np.tanh(LSTAT)))))))),"{<class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 2, <class 'str'>: 2, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 1, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 16, <class 'geneticengine.grammars.basic_math.SafeLog'>: 0, <class 'geneticengine.grammars.sgp.Minus'>: 0, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
60.841856694215856,10,30,15,13.031820297241211,0,39.317927312421894,np.sqrt(np.abs((((np.log(1 + np.abs((2 + ((np.exp(CRIM)/(B - TAX)) + np.sin(5)))))/np.sin(((8/(np.log(1 + np.abs(ZN)) - np.exp(0))) - ZN))) + np.exp(RM))/np.tanh(RM)))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 30, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 0}"
59.96024156752743,10,35,16,13.844182968139648,0,38.44798439076502,np.sqrt(np.abs((((np.log(1 + np.abs((7 + ((np.exp(CRIM)/(B - TAX)) + np.sin(5)))))/np.sin(((((INDUS * 8) * np.tanh(7))/(np.log(1 + np.abs(ZN)) - np.exp(0))) - ZN))) + np.exp(RM))/np.tanh(RM)))),"{<class 'examples.boston_housing.Literal'>: 5, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 5, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 2, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
59.84272942305696,10,31,17,14.535263776779175,0,37.750214388057,np.sqrt(np.abs((((np.log(1 + np.abs((7 + ((np.exp(CRIM)/(B - TAX)) + np.sin(5)))))/np.sin(((((INDUS * 8) * np.tanh(7))/RAD) - ZN))) + np.exp(RM))/np.tanh(AGE)))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 1, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 31, <class 'geneticengine.grammars.basic_math.SafeLog'>: 1, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
48.35460215134863,10,44,18,15.444307088851929,0,37.8300907463807,np.sqrt(np.abs((((np.log(1 + np.abs((2 + ((np.exp(CRIM)/(B - TAX)) + np.sin(5)))))/np.sin(((RM/(np.log(1 + np.abs(ZN)) - np.exp(0))) - ZN))) + np.exp(RM))/np.exp((np.tanh(np.sqrt(np.abs((np.sqrt(np.abs(np.sin(CHAS)))/np.sqrt(np.abs((PTRATIO * 0)))))))/np.log(1 + np.abs(np.log(1 + np.abs(np.exp(PTRATIO)))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 10, <class 'str'>: 10, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 6, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 44, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
48.07351942505785,10,40,19,16.205270767211914,0,38.71364510945488,np.sqrt(np.abs((((np.log(1 + np.abs((2 + np.tanh(8))))/np.sin(((RM/(np.log(1 + np.abs(ZN)) - np.exp(0))) - ZN))) + np.exp(RM))/np.exp((np.tanh(np.sqrt(np.abs(((np.exp(PTRATIO) + (RM - PTRATIO))/np.sqrt(np.abs((PTRATIO * 0)))))))/np.log(1 + np.abs(np.log(1 + np.abs(np.exp(PTRATIO)))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 5, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 3, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 40, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
45.57814976117913,10,44,20,17.163513660430908,0,43.632632696130656,np.sqrt(np.abs((((np.log(1 + np.abs((RM + ((np.exp(9) + (0/DIS)) * 5))))/((LSTAT + np.sin(np.sqrt(np.abs(RM)))) - (np.tanh(2) + RAD))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 44, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
45.57814976117913,10,44,21,18.0331289768219,0,43.632632696130656,np.sqrt(np.abs((((np.log(1 + np.abs((RM + ((np.exp(9) + (0/DIS)) * 5))))/((LSTAT + np.sin(np.sqrt(np.abs(RM)))) - (np.tanh(2) + RAD))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 8, <class 'str'>: 8, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 44, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
45.04762939458611,10,35,22,18.8339946269989,0,43.457095244941726,np.sqrt(np.abs((((np.log(1 + np.abs(5))/((LSTAT + np.sin(np.sqrt(np.abs(1)))) - (np.tanh(2) + RAD))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 6, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 3, <class 'int'>: 6, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
44.97165718693638,10,35,23,19.72701907157898,0,42.42926911695727,np.sqrt(np.abs((((np.sqrt(np.abs((np.sin(RM) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (ZN - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 3, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 2, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
41.8128975145743,10,54,24,20.455674409866333,0,35.628920232106694,np.sqrt(np.abs((((np.log(1 + np.abs((np.tanh(np.sqrt(np.abs(8))) + ((np.exp(9) + (2/DIS)) * 5))))/(0 - (np.exp(np.sqrt(np.abs((DIS * 7)))) + np.tanh((np.tanh(3)/(INDUS * INDUS)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 3, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 9, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 54, <class 'geneticengine.grammars.basic_math.SafeLog'>: 5, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 4}"
39.89164426290258,10,38,25,21.338801622390747,0,32.40817818987347,np.sqrt(np.abs((((np.sqrt(np.abs(((np.exp((9 * 1)) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (ZN - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin(((2/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 38, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
39.89164426290258,10,38,26,22.175856828689575,0,32.40817818987347,np.sqrt(np.abs((((np.sqrt(np.abs(((np.exp((9 * 1)) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (ZN - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin(((2/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 38, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
39.89164426290258,10,38,27,22.97320795059204,0,32.40817818987347,np.sqrt(np.abs((((np.sqrt(np.abs(((np.exp((9 * 1)) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (ZN - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin(((2/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 5, <class 'str'>: 5, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 5, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 2, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 38, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
39.68858097529478,10,51,28,23.95165777206421,0,31.512343004785553,np.sqrt(np.abs((((np.log(1 + np.abs((1 + ((RAD + (2/DIS)) * 5))))/(1 - (np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) + np.tanh(((DIS - DIS)/(INDUS * INDUS)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 11, <class 'str'>: 11, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 51, <class 'geneticengine.grammars.basic_math.SafeLog'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 4, <class 'geneticengine.grammars.sgp.Mul'>: 3}"
39.68858097529478,10,51,29,24.780664682388306,0,31.512343004785553,np.sqrt(np.abs((((np.log(1 + np.abs((1 + ((RAD + (2/DIS)) * 5))))/(1 - (np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) + np.tanh(((DIS - DIS)/(INDUS * INDUS)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 11, <class 'str'>: 11, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 51, <class 'geneticengine.grammars.basic_math.SafeLog'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 4, <class 'geneticengine.grammars.sgp.Mul'>: 3}"
39.68858097529478,10,51,30,25.601155281066895,0,31.512343004785553,np.sqrt(np.abs((((np.log(1 + np.abs((1 + ((RAD + (2/DIS)) * 5))))/(1 - (np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(7)))))) + np.tanh(((DIS - DIS)/(INDUS * INDUS)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(AGE))/(5 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 7, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 11, <class 'str'>: 11, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 5, <class 'int'>: 7, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 51, <class 'geneticengine.grammars.basic_math.SafeLog'>: 6, <class 'geneticengine.grammars.sgp.Minus'>: 4, <class 'geneticengine.grammars.sgp.Mul'>: 3}"
39.40068417925224,10,53,31,26.460829973220825,0,35.349217650506546,np.sqrt(np.abs((((np.log(1 + np.abs(((DIS * 7) + ((np.sin(0) * np.log(1 + np.abs(NOX))) * 5))))/(np.tanh(np.log(1 + np.abs((4 + np.sin(DIS))))) - (CHAS + np.tanh((RAD/(7 + 6)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(7))/(7 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 53, <class 'geneticengine.grammars.basic_math.SafeLog'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 4}"
39.40068417925224,10,53,32,27.241300344467163,0,35.349217650506546,np.sqrt(np.abs((((np.log(1 + np.abs(((DIS * 7) + ((np.sin(0) * np.log(1 + np.abs(NOX))) * 5))))/(np.tanh(np.log(1 + np.abs((4 + np.sin(DIS))))) - (CHAS + np.tanh((RAD/(7 + 6)))))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.log(1 + np.abs((RAD - DIS))))))))) * np.log(1 + np.abs(np.sin(((np.sqrt(np.abs(7))/(7 - RAD)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 9, <class 'geneticengine.grammars.basic_math.Exp'>: 2, <class 'geneticengine.grammars.sgp.Var'>: 9, <class 'str'>: 9, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 2, <class 'geneticengine.grammars.sgp.Plus'>: 6, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 4, <class 'int'>: 9, <class 'geneticengine.grammars.basic_math.Sin'>: 3, <class 'geneticengine.grammars.sgp.Number'>: 53, <class 'geneticengine.grammars.basic_math.SafeLog'>: 7, <class 'geneticengine.grammars.sgp.Minus'>: 3, <class 'geneticengine.grammars.sgp.Mul'>: 4}"
38.79756860907259,10,35,33,28.14181661605835,0,31.335977331540782,np.sqrt(np.abs((((np.sqrt(np.abs((((np.exp(3) + RAD) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
38.79756860907259,10,35,34,28.839619636535645,0,31.335977331540782,np.sqrt(np.abs((((np.sqrt(np.abs((((np.exp(3) + RAD) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
38.79756860907259,10,35,35,29.621784210205078,0,31.335977331540782,np.sqrt(np.abs((((np.sqrt(np.abs((((np.exp(3) + RAD) + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RM)))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 4, <class 'geneticengine.grammars.sgp.Var'>: 6, <class 'str'>: 6, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 6, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
36.26090269320402,10,35,36,30.558621168136597,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.26090269320402,10,35,37,31.384852647781372,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.26090269320402,10,35,38,32.281657695770264,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.26090269320402,10,35,39,33.22418522834778,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.26090269320402,10,35,40,33.911970138549805,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
36.26090269320402,10,35,41,34.86379551887512,0,27.613320615668897,np.sqrt(np.abs((((np.sqrt(np.abs(((((RM * 3) + RAD) + 7) - 2))) + (B - np.sqrt(np.abs(PTRATIO)))) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(np.exp(np.sqrt(np.abs(INDUS))))))))) * np.log(1 + np.abs(np.sin((np.sqrt(np.abs(RM)) + np.log(1 + np.abs(7))))))))))),"{<class 'examples.boston_housing.Literal'>: 4, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 7, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 4, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 35, <class 'geneticengine.grammars.basic_math.SafeLog'>: 3, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 2}"
35.550805347009785,10,32,42,35.700865507125854,0,27.12353044296449,np.sqrt(np.abs((((np.sqrt(np.abs(((DIS + 7) - np.log(1 + np.abs(np.tanh(np.exp(8))))))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(np.sqrt(np.abs(RAD)))))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 3, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 4, <class 'geneticengine.grammars.basic_math.Tanh'>: 1, <class 'geneticengine.grammars.sgp.Plus'>: 5, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 3, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 32, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 2, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,43,36.46012043952942,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,44,37.48210692405701,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,45,38.367326974868774,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,46,39.41024947166443,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,47,40.14979648590088,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,48,41.02843356132507,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,49,41.92377686500549,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
31.6830863491586,10,25,50,42.67790198326111,0,24.60662154684484,np.sqrt(np.abs((((np.log(1 + np.abs(np.exp(DIS))) + (B - INDUS)) + np.exp(RM))/np.exp((np.log(1 + np.abs(np.sqrt(np.abs(INDUS)))) * np.log(1 + np.abs(np.sin((7 + np.log(1 + np.abs((PTRATIO + RAD)))))))))))),"{<class 'examples.boston_housing.Literal'>: 1, <class 'geneticengine.grammars.basic_math.Exp'>: 3, <class 'geneticengine.grammars.sgp.Var'>: 7, <class 'str'>: 7, <class 'geneticengine.grammars.basic_math.SafeSqrt'>: 2, <class 'geneticengine.grammars.basic_math.Tanh'>: 0, <class 'geneticengine.grammars.sgp.Plus'>: 4, <class 'geneticengine.grammars.basic_math.SafeDiv'>: 1, <class 'int'>: 1, <class 'geneticengine.grammars.basic_math.Sin'>: 1, <class 'geneticengine.grammars.sgp.Number'>: 25, <class 'geneticengine.grammars.basic_math.SafeLog'>: 4, <class 'geneticengine.grammars.sgp.Minus'>: 1, <class 'geneticengine.grammars.sgp.Mul'>: 1}"
