0.020164113491773605,2.247377872467041,0,cnn,"Genotype(dna=[36815, 36749, 31474, 99898, 63154, 81583, 79971, 37732, 11811, 75294, 77368, 83066, 72953, 5417, 93797, 92194, 50858, 98105, 54318, 85305, 10580, 88829, 70785, 25206, 91564, 43830, 20981, 63256, 32884, 78606, 58737, 49630, 93106, 59494, 62045, 54317, 4134, 52725, 91990, 74379, 26520, 86795, 92930, 6131, 21715, 58373, 8373, 33977, 91949, 20668, 58505, 69150, 63866, 73584, 96425, 99022, 84935, 5100, 64825, 42722, 94471, 61196, 6534, 54412, 24641, 71901, 82980, 10940, 95099, 17107, 5223, 52666, 88934, 54720, 83882, 444, 27987, 1873, 94021, 98324, 48701, 88573, 69251, 80224, 12816, 24963, 15584, 79738, 85100, 26019, 39638, 36697, 90248, 23884, 34223, 62338, 51995, 82265, 10662, 2863, 36007, 59372, 90732, 33618, 17487, 85664, 68270, 85645, 84533, 45488, 93040, 20242, 36491, 2434, 63549, 34611, 37900, 1768, 87998, 19364, 46032, 35690, 88720, 48106, 38974, 65765, 50509, 90214, 43805, 30420, 2949, 59562, 22324, 26162, 79765, 52023, 44482, 62066, 39507, 57720, 18261, 50688, 89972, 54166, 97434, 54097, 83605, 78989, 49899, 43851, 75858, 52595, 91165, 65734, 39046, 88418, 6868, 12416, 62459, 64901, 69363, 28362, 34754, 67419, 21942, 2354, 18384, 78297, 41739, 99167, 69695, 66363, 84864, 89922, 28170, 33944, 56809, 39538, 37479, 85266, 69038, 21324, 85561, 25470, 33684, 60138, 65094, 9014, 2395, 26379, 7983, 20259, 97454, 137, 28387, 24248, 81022, 22752, 50020, 47235, 79874, 89723, 1181, 46598, 86070, 2161, 2706, 13873, 21951, 85067, 30950, 26429, 22325, 96775, 47615, 46493, 11509, 77561, 81912, 91110, 91683, 3241, 22569, 57241, 77840, 69690, 23490, 77990, 56693, 27343, 50325, 25796, 41847, 24179, 14318, 65051, 86257, 19811, 80181, 77517, 66274, 53436, 95020, 15096, 29712, 360, 7167, 57165, 79230, 4109, 84722, 27701, 84967, 17766, 65858, 11169])","CNN(layers=[DropoutL(rate=Rate(rate=6.128652676995489e-06)), LTypeLayer(l_type=ConvL(filters=Filters(filters=128), ksize=Ksize(ksize=5), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='linear')), layer=LTypeLayer(l_type=DenseL(units=Units(units=512), activation=Activation(activation='elu')), layer=LTypeLayer(l_type=DropoutL(rate=Rate(rate=5.861252432419759e-06)), layer=DenseL(units=Units(units=256), activation=Activation(activation='relu')))))])","{<class 'examples.CNN.PoolL'>: 0, <class 'int'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0}"
0.005111857783049345,2.1700525283813477,1,cnn,"Genotype(dna=[41375, 59264, 86740, 39875, 14984, 56575, 49923, 14558, 25305, 86201, 25516, 83420, 17783, 81681, 78144, 37567, 87603, 3380, 57701, 437, 92383, 73332, 29806, 87787, 68147, 48868, 1158, 52801, 46806, 8219, 2094, 17973, 41984, 75585, 12831, 67823, 94124, 34205, 25538, 10424, 1037, 45120, 62148, 46126, 33939, 50366, 50522, 52956, 69480, 69283, 69897, 61008, 4873, 11600, 60978, 99583, 79669, 81064, 29101, 82585, 40589, 27298, 68930, 3360, 6346, 20878, 41570, 18973, 97180, 3904, 52022, 68800, 53533, 95442, 94430, 62228, 29395, 22097, 51523, 53644, 17184, 21844, 8374, 76637, 51067, 71342, 35598, 77575, 5817, 28521, 80891, 39874, 92584, 49845, 39265, 591, 2998, 4273, 1345, 39557, 7334, 78103, 72701, 78606, 93455, 84342, 26450, 8935, 98075, 21001, 59693, 67336, 32609, 80828, 91733, 80959, 78074, 86330, 40678, 20097, 59290, 6860, 8629, 37760, 23898, 3198, 81783, 41385, 3120, 19391, 84395, 16746, 30605, 16547, 94861, 74940, 64833, 65413, 25146, 86597, 17158, 37434, 3951, 84255, 30928, 59225, 10589, 22926, 85720, 77587, 80861, 4266, 14080, 99321, 25636, 25711, 88511, 85418, 83467, 19629, 57794, 12417, 5906, 88640, 30411, 80592, 39017, 57845, 17789, 39490, 38892, 90531, 69962, 80923, 39238, 61780, 68166, 11512, 56112, 52376, 52887, 98742, 40601, 3978, 51820, 62489, 28176, 1008, 38518, 22786, 61518, 3467, 48371, 23612, 10391, 62551, 49955, 38586, 68023, 96698, 70040, 84127, 29682, 36443, 56710, 64046, 13486, 26024, 12054, 81114, 64400, 29866, 44760, 18837, 64539, 47600, 60049, 91191, 5585, 27862, 56614, 14026, 45476, 94974, 58899, 2176, 60346, 86128, 27855, 1642, 80779, 85663, 84407, 58858, 55272, 208, 95636, 25931, 34018, 17077, 94045, 92720, 44222, 62615, 59601, 44808, 31133, 41325, 45328, 96340, 93410, 7584, 3003, 57734, 92172, 61708])","CNN(layers=[LTypeLayer(l_type=ConvL(filters=Filters(filters=32), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='linear')), layer=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=2), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='tanh'))), DenseL(units=Units(units=1024), activation=Activation(activation='selu'))])","{<class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'int'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Start'>: 1}"
0.016815336421132088,1.8229448795318604,2,cnn,"Genotype(dna=[71385, 9684, 74801, 11868, 77070, 66902, 70593, 87120, 64973, 52598, 90642, 59582, 22203, 53974, 23414, 76501, 2109, 6049, 14189, 59156, 77508, 5742, 15525, 89093, 65536, 22949, 10136, 51461, 28871, 50999, 92711, 1159, 64901, 31205, 87647, 45959, 28913, 51058, 60094, 19249, 56007, 87787, 12048, 33148, 68498, 13941, 6523, 43343, 47012, 8469, 63106, 18284, 60564, 3981, 18170, 91193, 65818, 71061, 78069, 6336, 987, 45057, 79326, 68535, 44248, 89370, 69268, 31258, 62935, 48696, 97419, 64487, 48586, 70796, 41957, 32335, 24572, 61127, 1440, 69260, 80745, 77210, 82100, 49693, 44137, 86956, 82761, 47279, 12308, 33611, 70420, 12581, 48929, 24169, 21405, 7489, 38343, 95826, 78203, 1557, 38226, 63978, 64563, 10159, 70503, 58641, 13577, 31464, 63310, 18930, 11552, 86637, 37228, 58930, 78668, 83510, 24613, 14103, 36062, 51877, 62364, 11391, 24687, 12451, 55372, 20380, 31989, 29412, 40795, 119, 90973, 76485, 74148, 65785, 54615, 77021, 80089, 53324, 44522, 69637, 65923, 15022, 71412, 38154, 64646, 49697, 54205, 45493, 2746, 52282, 15569, 61109, 46114, 64452, 28159, 9009, 62852, 73709, 40092, 24257, 76794, 29842, 85340, 63977, 81236, 97509, 33918, 73224, 97109, 19665, 73030, 50466, 7007, 87196, 8639, 99982, 87443, 39543, 56310, 60054, 34305, 72925, 92938, 40812, 8510, 56797, 78444, 25838, 97334, 89597, 22186, 73505, 20944, 10101, 80690, 75544, 9884, 2170, 31001, 1540, 49033, 43741, 99654, 92598, 25648, 4231, 52365, 25767, 48340, 64699, 77292, 47521, 7841, 43272, 62437, 84627, 6692, 60887, 25535, 9514, 25814, 56545, 72051, 84349, 1654, 56734, 88728, 11746, 39762, 15515, 44317, 62117, 54281, 52976, 88421, 58208, 30450, 31763, 91874, 64198, 42955, 89023, 27327, 82894, 61616, 12521, 98077, 53911, 43529, 40787, 17337, 99361, 79308, 20711, 64741, 90560])","CNN(layers=[DropoutL(rate=Rate(rate=7.473506419742015e-06)), LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='tanh')), layer=DropoutL(rate=Rate(rate=6.535776842435492e-06))), LTypeLayer(l_type=DenseL(units=Units(units=1024), activation=Activation(activation='elu')), layer=DropoutL(rate=Rate(rate=3.22040448280304e-05)))])","{<class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'int'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0}"
0.01304203923791647,1.9124866724014282,3,cnn,"Genotype(dna=[10027, 62060, 3908, 23038, 31058, 63697, 79578, 43540, 79307, 91592, 93100, 38277, 87687, 53437, 47073, 77636, 98993, 8114, 92160, 47026, 41419, 71398, 54279, 79296, 18856, 10045, 63437, 14089, 52749, 18569, 81378, 61574, 73393, 895, 55222, 6182, 50381, 19772, 21558, 16278, 55490, 40211, 18435, 40895, 75940, 44824, 8843, 75763, 75925, 39248, 87846, 13457, 14185, 32655, 36503, 2136, 67867, 15746, 66422, 54200, 93049, 64179, 15117, 64883, 59747, 35674, 46722, 59897, 25933, 97435, 12175, 87091, 83429, 65132, 49035, 51317, 9708, 76039, 82986, 2887, 89939, 37270, 83383, 17886, 81556, 93000, 88190, 4495, 42414, 69817, 16661, 6963, 53899, 73751, 30796, 59711, 59876, 94706, 97072, 58830, 55188, 27017, 93927, 68437, 10811, 70473, 16776, 66944, 43146, 38970, 50544, 14711, 52574, 78728, 63373, 19962, 23143, 30578, 80565, 48214, 46800, 30362, 70063, 15312, 25204, 32120, 38773, 48390, 43390, 31467, 72771, 31564, 81234, 41436, 79272, 73475, 46783, 25435, 6051, 19142, 71728, 49278, 74375, 47676, 71697, 73932, 34908, 64034, 92621, 60125, 89060, 5331, 21683, 24420, 33812, 8049, 99752, 54873, 25147, 4894, 46632, 1970, 21084, 27454, 60264, 16845, 30613, 28376, 27356, 73224, 34030, 43178, 36222, 89673, 26066, 30205, 72365, 50711, 27754, 14427, 89241, 48685, 56891, 13619, 62466, 60813, 89343, 24390, 91908, 74887, 98628, 74997, 86285, 29223, 99935, 52762, 33426, 96134, 21370, 14603, 12917, 47265, 70823, 98371, 92301, 73450, 59907, 16429, 15052, 52415, 32639, 42161, 20274, 38847, 9115, 50057, 53395, 52515, 1001, 49358, 77495, 78241, 59243, 72977, 32510, 87339, 52818, 34087, 19988, 4256, 99327, 68240, 12498, 46083, 61760, 15218, 32406, 2438, 32384, 1043, 2387, 59703, 58482, 72328, 6091, 54157, 52018, 9851, 41906, 14603, 62382, 26912, 44748, 66711, 65091, 22803])","CNN(layers=[DropoutL(rate=Rate(rate=7.849540016955007e-06)), ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='tanh')), LTypeLayer(l_type=DenseL(units=Units(units=128), activation=Activation(activation='linear')), layer=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=5), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='relu')))])","{<class 'int'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0}"
0.0189657062292099,2.6218488216400146,4,cnn,"Genotype(dna=[82451, 42747, 5599, 39350, 96981, 77144, 27163, 44034, 51696, 96683, 46831, 52740, 19656, 59700, 9598, 23347, 50282, 42608, 33273, 22489, 18942, 8537, 86606, 6618, 48549, 84392, 95850, 95673, 41779, 28979, 3363, 33053, 45431, 49582, 13033, 9174, 65145, 5848, 3771, 38333, 52304, 83897, 54168, 26939, 34693, 43008, 80020, 80201, 17467, 6316, 15599, 64403, 47302, 28309, 97481, 3447, 86773, 37197, 61919, 58819, 32214, 28952, 2424, 45410, 88383, 49454, 49105, 45667, 35276, 97485, 93024, 65561, 7075, 55567, 46634, 91279, 88812, 92878, 57617, 23774, 66882, 53602, 69734, 10166, 18931, 68487, 31121, 23140, 949, 23571, 2485, 41131, 52195, 33017, 76917, 75839, 74892, 14373, 48741, 33069, 6228, 17437, 84480, 42730, 70106, 2160, 39847, 53464, 28724, 70773, 15388, 91433, 27086, 29572, 36515, 2229, 93717, 98051, 62017, 80921, 29965, 1785, 59836, 10589, 17200, 59126, 2083, 43289, 4702, 13714, 11250, 80846, 12939, 10434, 99412, 76889, 34787, 38540, 59409, 39931, 97280, 96763, 81640, 68689, 80036, 78960, 68042, 64812, 33830, 76059, 98314, 52789, 79484, 25653, 10069, 9099, 4844, 28383, 25987, 49014, 24452, 65764, 30401, 49003, 84616, 13632, 54510, 23659, 10452, 32300, 11404, 13595, 38112, 12589, 98111, 23517, 9687, 53403, 86690, 12762, 45472, 59674, 1988, 93232, 63775, 70350, 97553, 18148, 10594, 8080, 33883, 98673, 75594, 53358, 21691, 35254, 23122, 50643, 63804, 19827, 21919, 90697, 96585, 73147, 94283, 53048, 85118, 23941, 96510, 12688, 80323, 30356, 61660, 1647, 58306, 66267, 17017, 86588, 61313, 54744, 47294, 73501, 71936, 14322, 32246, 43522, 3242, 59149, 86822, 87580, 45276, 88056, 38473, 72352, 11346, 49633, 80657, 69183, 39954, 44238, 73680, 78043, 42058, 40604, 7255, 92887, 21088, 28331, 84495, 22062, 89517, 74693, 15980, 19188, 69120, 70112])","CNN(layers=[DenseL(units=Units(units=128), activation=Activation(activation='selu')), ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=2), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Padding'>: 0, <class 'int'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'str'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.PoolL'>: 0}"
0.037513118237257004,1.8910834789276123,5,cnn,"Genotype(dna=[90221, 58954, 30566, 21400, 12356, 53278, 70053, 71064, 32, 36309, 67196, 37074, 90626, 10333, 94330, 65055, 81478, 54608, 46853, 56103, 76132, 67692, 71064, 43510, 62369, 52289, 28707, 83475, 853, 22462, 3620, 57011, 31738, 76866, 39689, 38230, 88926, 8631, 28709, 12660, 82232, 16726, 40866, 21184, 12941, 61726, 29654, 29794, 29667, 81474, 31669, 41595, 11442, 63263, 87588, 71869, 4673, 54459, 60991, 33741, 6133, 86838, 26806, 51545, 40319, 16341, 90279, 29356, 38936, 22270, 18181, 88648, 57197, 11486, 88670, 47045, 41009, 17389, 17014, 21848, 65463, 28825, 88775, 78009, 89769, 55063, 77199, 87333, 32163, 78409, 8053, 64573, 84916, 32607, 6295, 82866, 98282, 52908, 53768, 50645, 9420, 11141, 21867, 49789, 68486, 72887, 33412, 38227, 39090, 99577, 61410, 42660, 78480, 98003, 72975, 93901, 85912, 2452, 95423, 55408, 91904, 24633, 35087, 13964, 39859, 73653, 58232, 57035, 89713, 40166, 74069, 77643, 34418, 65237, 88591, 81874, 37423, 2042, 24631, 62916, 96856, 58240, 3655, 3600, 15946, 10896, 44700, 50948, 57141, 24505, 80216, 32025, 39698, 38417, 72727, 17883, 76737, 26123, 23206, 16563, 73441, 75340, 22164, 4908, 80782, 32199, 64240, 14961, 7377, 94562, 37451, 82649, 99962, 18878, 99922, 56958, 56289, 15493, 13545, 3515, 2119, 99666, 69838, 39412, 37007, 98475, 92802, 44056, 61143, 38905, 76163, 48759, 39782, 5373, 94501, 47322, 26430, 97650, 77437, 17364, 80441, 371, 33085, 72512, 59718, 66890, 14103, 90101, 15240, 25058, 57685, 79542, 52364, 93273, 2675, 50116, 96456, 82868, 85047, 63160, 66444, 31321, 51362, 89434, 82418, 95252, 17918, 72086, 74777, 83260, 39800, 422, 82896, 30286, 76298, 51323, 86187, 61924, 99390, 76251, 21685, 62706, 9887, 71971, 65232, 45623, 39466, 91330, 65564, 45718, 16840, 6364, 8967, 60059, 45395, 3812])","CNN(layers=[ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='tanh')), DropoutL(rate=Rate(rate=5.517119622187649e-06)), LTypeLayer(l_type=DropoutL(rate=Rate(rate=7.685686178061977e-06)), layer=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')))])","{<class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'int'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0}"
0.012710947543382645,1.8053747415542603,6,cnn,"Genotype(dna=[73286, 92834, 49724, 96365, 15433, 26378, 74251, 38840, 92421, 31254, 74000, 84647, 21359, 27552, 89205, 82170, 3819, 30286, 33294, 72851, 66035, 13360, 84934, 11227, 6386, 63762, 37725, 51538, 95441, 45953, 95100, 80786, 77271, 58165, 6014, 24976, 45814, 45495, 93518, 97585, 42378, 73681, 62371, 21216, 27560, 37646, 98932, 57339, 7903, 2337, 50862, 70470, 61830, 17222, 66976, 13550, 86539, 95404, 91164, 54382, 92897, 42889, 50985, 68117, 88105, 84381, 14179, 61260, 20276, 64177, 51517, 36760, 24949, 46792, 71743, 81426, 21484, 65469, 81949, 89363, 91715, 72557, 84458, 36658, 76834, 39985, 52500, 61212, 98901, 72505, 38689, 26412, 76205, 83625, 25165, 43383, 94714, 20910, 78738, 18719, 79934, 93206, 20944, 44315, 90026, 90039, 98614, 85773, 21522, 29281, 98591, 76997, 89385, 61660, 977, 49700, 58246, 86180, 71892, 58896, 84943, 99862, 21794, 75331, 13584, 13607, 72870, 65481, 13278, 87760, 97321, 18186, 95245, 55837, 54893, 66704, 95060, 75275, 39868, 93679, 95293, 97577, 75458, 32151, 68879, 16046, 91881, 6839, 14699, 35041, 65404, 99189, 80052, 44946, 18141, 89732, 90332, 59835, 84118, 7768, 37115, 26959, 32107, 54699, 97903, 76592, 64056, 59000, 41263, 91866, 77799, 9903, 47863, 8898, 42209, 59639, 24301, 3618, 37307, 85701, 39697, 77160, 35506, 20552, 73184, 38248, 8618, 5664, 9538, 96540, 46551, 71756, 889, 42336, 30338, 56010, 77067, 98963, 49548, 43769, 81331, 83327, 8717, 86042, 488, 94530, 5541, 16133, 12065, 31773, 28465, 32773, 20695, 19865, 73577, 12643, 49880, 80984, 41252, 6705, 62732, 4351, 50672, 51741, 30016, 96486, 63227, 52825, 96907, 72353, 46893, 21739, 71984, 34455, 30167, 39996, 6272, 43842, 63373, 23387, 28046, 82158, 10441, 76541, 2776, 13920, 62451, 10459, 94664, 37885, 52467, 86957, 21581, 51966, 99078, 68283])","CNN(layers=[LTypeLayer(l_type=DenseL(units=Units(units=128), activation=Activation(activation='selu')), layer=DenseL(units=Units(units=32), activation=Activation(activation='elu'))), LTypeLayer(l_type=PoolL(pool_type=PoolType(pooltype='maxpool'), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='same')), layer=DropoutL(rate=Rate(rate=6.863229561302367e-06))), LTypeLayer(l_type=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='tanh')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu')))])","{<class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'int'>: 0, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.LType'>: 0, <class 'str'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'float'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.PoolL'>: 0}"
0.01570185087621212,1.772545337677002,7,cnn,"Genotype(dna=[99128, 1359, 74314, 83735, 32030, 84437, 6844, 95428, 22468, 20578, 19730, 40211, 19455, 74708, 65081, 67019, 49895, 57277, 40253, 17510, 31452, 64177, 93487, 40196, 78799, 7189, 45256, 22630, 41904, 18230, 45806, 39103, 71119, 52568, 6291, 71797, 59729, 44474, 61632, 93957, 98160, 28065, 4816, 44622, 47304, 32682, 8390, 13159, 38975, 42878, 3406, 3351, 92522, 78911, 9260, 30913, 8942, 89669, 99236, 23610, 56848, 83790, 16313, 6417, 17956, 9427, 78156, 65162, 23614, 1860, 94539, 7057, 96626, 61633, 65302, 28941, 13448, 94428, 71813, 98129, 38652, 27659, 81991, 3552, 19107, 93757, 27119, 67663, 37400, 61337, 12482, 26427, 11997, 71141, 47615, 86349, 91213, 16365, 85824, 74497, 21693, 24145, 77446, 95032, 87426, 3097, 10819, 17169, 75225, 12102, 24092, 68639, 38141, 67527, 14924, 54052, 13310, 29140, 98145, 79139, 7573, 36661, 48067, 36727, 56815, 20675, 49884, 83485, 3792, 10092, 54632, 26440, 42894, 39552, 43127, 67572, 95971, 24486, 64392, 71679, 98589, 51154, 1420, 87614, 13123, 66554, 49544, 73544, 21504, 12314, 2300, 85100, 72271, 99552, 14785, 74593, 36797, 7001, 27130, 51470, 89503, 44911, 14587, 1616, 11416, 29929, 85521, 88071, 44510, 86937, 77970, 10171, 39945, 589, 39383, 64101, 79145, 2143, 14496, 62309, 54874, 53845, 77404, 39250, 59963, 19114, 43963, 71487, 28004, 10891, 8676, 51625, 12284, 81169, 4268, 98822, 44017, 11531, 35521, 24548, 91904, 29353, 53404, 86638, 70539, 26589, 15821, 28353, 89515, 82201, 2642, 49236, 73317, 65392, 35583, 53357, 19779, 47497, 18909, 29386, 47577, 53117, 51688, 40444, 65493, 41745, 66421, 82662, 24831, 21261, 90519, 69100, 97522, 94653, 47966, 2553, 44299, 72620, 60118, 50275, 88216, 2370, 50376, 43450, 67821, 169, 2388, 67143, 8426, 9513, 29957, 13733, 54722, 34808, 35641, 5188])","CNN(layers=[LTypeLayer(l_type=DropoutL(rate=Rate(rate=5.9215045358724744e-06)), layer=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='tanh'))), DenseL(units=Units(units=1024), activation=Activation(activation='linear'))])","{<class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'int'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0}"
0.01754511520266533,2.8068742752075195,8,cnn,"Genotype(dna=[22983, 48550, 49200, 16558, 25312, 92381, 5738, 70434, 17936, 90000, 66369, 27446, 52521, 84130, 18175, 96796, 63884, 59392, 73832, 64878, 75120, 25196, 52780, 11739, 63582, 92740, 53947, 2620, 91902, 34965, 68180, 53433, 62170, 49686, 32812, 32577, 86895, 33863, 12735, 8269, 50642, 14224, 40610, 96391, 96369, 25269, 8315, 87780, 76521, 34735, 98161, 60416, 69787, 50582, 35740, 34168, 68867, 16597, 9921, 73809, 4692, 54671, 36826, 75370, 29871, 74352, 78339, 74890, 90207, 17009, 46207, 19768, 75535, 82536, 84736, 8486, 88525, 30760, 14152, 38498, 77815, 18301, 5943, 87545, 34633, 84374, 59151, 13815, 11248, 44491, 73911, 84719, 50153, 68573, 49386, 78001, 48462, 21973, 49320, 25785, 19006, 87992, 81562, 24989, 86519, 9230, 40703, 29534, 21434, 32077, 97448, 61325, 58537, 76366, 642, 82107, 94343, 29968, 23518, 50256, 2167, 6165, 2031, 53179, 96433, 79418, 69026, 75441, 28954, 30186, 19846, 31123, 81876, 18666, 64528, 54762, 85335, 34174, 11291, 81194, 93079, 40385, 91124, 14658, 27532, 71421, 78353, 11867, 32572, 10332, 72634, 19498, 46076, 47792, 69705, 40871, 83827, 60652, 54528, 23290, 68059, 73943, 52313, 11440, 71156, 26452, 27112, 17761, 31643, 36718, 87628, 51387, 97235, 92804, 70823, 3268, 43027, 29185, 52771, 87412, 20003, 59570, 4149, 45812, 60871, 4029, 60365, 98930, 52243, 83759, 76339, 56874, 79110, 1590, 82374, 96889, 63570, 50211, 44497, 35521, 51239, 73010, 26339, 32777, 72000, 37419, 85315, 22004, 40063, 90287, 79352, 27199, 24215, 44198, 87936, 61611, 48343, 69894, 78539, 77557, 73093, 40254, 8024, 59708, 45261, 63724, 686, 21268, 45898, 11006, 9419, 42536, 24561, 63052, 10266, 85825, 86576, 82903, 2450, 73087, 98497, 51929, 26181, 97638, 73568, 96402, 97157, 85389, 26971, 47532, 19302, 58768, 16900, 18041, 29918, 35929])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.PoolL'>: 0, <class 'int'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0}"
0.005935676395893097,2.477813243865967,9,cnn,"Genotype(dna=[78651, 46565, 23287, 92162, 15264, 55810, 20618, 53634, 84620, 23214, 91606, 99841, 28865, 66666, 90555, 98448, 15268, 38638, 44275, 62840, 89907, 41652, 82579, 89570, 74023, 932, 467, 99739, 45195, 66285, 19726, 6773, 52867, 16494, 48051, 15042, 87127, 46676, 83237, 7912, 38272, 48253, 92545, 2254, 11926, 49597, 35512, 57141, 12018, 70346, 26425, 83963, 97508, 41159, 39108, 54593, 91839, 12492, 52858, 83781, 35179, 70841, 73127, 66246, 78038, 52635, 84579, 15864, 32577, 68728, 72242, 9614, 93517, 2084, 22401, 59728, 20989, 60659, 3020, 86816, 55170, 52196, 53554, 70981, 41663, 95191, 94025, 95587, 1944, 59790, 35015, 22587, 88649, 75766, 45638, 6558, 2716, 12879, 38551, 6677, 36607, 83795, 52666, 43233, 3569, 37625, 73892, 73722, 73891, 45874, 6961, 94822, 68617, 1890, 82301, 9205, 25341, 71824, 18927, 36035, 98983, 19580, 13777, 14233, 66169, 37141, 71031, 5018, 8834, 81118, 71872, 1397, 50039, 97146, 22178, 44294, 9272, 36876, 80754, 17951, 4507, 64463, 65964, 71899, 52885, 73275, 27400, 67403, 31199, 10468, 20048, 98443, 45296, 15392, 54770, 55457, 75249, 37959, 70812, 48974, 95022, 61797, 20723, 57592, 96148, 45521, 40898, 7010, 70052, 44170, 52483, 58063, 3277, 80541, 88515, 43059, 26148, 92881, 15583, 81560, 10057, 67262, 20086, 47316, 4761, 20784, 5168, 73037, 79967, 57958, 50014, 87560, 70020, 9162, 44722, 5929, 74889, 16041, 22370, 50077, 17242, 71109, 45721, 18547, 77295, 85894, 51231, 1723, 74430, 35800, 32941, 71216, 56255, 17876, 80301, 77009, 28047, 51423, 68193, 58866, 48425, 45737, 43213, 23714, 33281, 9926, 34816, 16195, 10981, 7577, 15047, 44989, 78339, 62235, 65171, 4135, 67006, 60206, 83390, 93824, 39806, 95332, 16686, 26512, 57430, 69503, 21064, 73470, 1625, 68994, 14128, 20763, 6398, 14346, 14417, 7891])","CNN(layers=[ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), DenseL(units=Units(units=1024), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'int'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'str'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'float'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1}"
0.006288183853030205,2.7564024925231934,10,cnn,"Genotype(dna=[452, 82096, 27944, 23196, 80865, 66558, 26753, 76529, 98876, 76246, 3796, 7146, 8894, 30044, 79240, 64127, 83374, 8745, 16460, 53221, 60914, 39597, 87083, 24030, 85754, 92712, 62293, 38321, 99356, 53243, 34109, 31247, 61640, 47171, 8820, 10247, 46231, 69086, 98255, 90201, 40404, 92186, 65736, 85317, 22340, 16830, 39468, 29904, 34269, 54943, 55469, 10016, 15735, 6011, 54265, 13729, 43681, 61118, 79782, 92867, 54069, 66564, 50656, 33291, 39952, 78838, 75611, 71011, 73, 89850, 61864, 72902, 9173, 21363, 70871, 91818, 2850, 35145, 41677, 71572, 43367, 6462, 42899, 37708, 86854, 36345, 59824, 42194, 87271, 20717, 19430, 64865, 12305, 97292, 7148, 29037, 25569, 96345, 66093, 40033, 96979, 87026, 44632, 37339, 18422, 97776, 9938, 93437, 84483, 54163, 30388, 75217, 3969, 31401, 22207, 52446, 70206, 75436, 3166, 5217, 71371, 89301, 65427, 86302, 71334, 52945, 56400, 51234, 869, 58714, 21266, 94778, 29297, 86891, 16816, 38508, 48201, 46116, 58229, 82191, 65585, 54335, 54312, 91184, 17122, 5039, 18721, 87026, 50158, 43027, 94426, 88264, 88745, 24132, 34460, 4360, 26587, 57281, 2799, 28519, 56573, 49789, 63851, 33099, 20749, 6505, 5992, 98898, 45330, 40327, 88088, 18327, 3189, 86502, 24310, 86780, 7682, 26997, 10140, 46937, 54107, 71830, 97475, 8851, 73209, 37203, 67398, 88287, 75239, 14708, 2233, 62585, 13373, 25782, 17142, 81723, 20482, 57290, 49541, 45135, 34813, 9824, 63643, 79000, 3040, 20163, 34780, 3281, 3131, 58835, 91349, 26261, 64828, 95797, 66513, 82689, 69658, 75688, 46074, 68792, 32233, 97152, 23411, 43151, 84784, 43632, 9330, 91777, 2332, 20876, 50691, 7362, 18996, 70353, 96484, 53974, 55065, 4971, 78993, 15008, 34650, 86350, 53768, 61220, 48074, 98115, 88057, 93250, 14970, 16235, 37851, 25446, 20651, 83629, 88960, 58934])","CNN(layers=[DenseL(units=Units(units=32), activation=Activation(activation='linear')), LTypeLayer(l_type=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=2), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='elu')), layer=PoolL(pool_type=PoolType(pooltype='maxpool'), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='same'))), DenseL(units=Units(units=1024), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'int'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0}"
0.0446169339120388,3.10913348197937,11,cnn,"Genotype(dna=[1986, 76449, 30251, 24423, 94894, 81479, 26198, 24764, 20080, 41338, 61614, 11874, 96578, 39696, 5770, 75242, 64100, 53929, 71159, 18759, 13141, 34304, 8395, 39050, 78773, 29827, 28667, 63202, 26358, 47951, 77689, 62175, 68085, 6714, 19872, 8438, 934, 99694, 40545, 97308, 10278, 526, 23920, 46374, 63365, 18315, 26503, 53551, 63472, 4209, 39107, 46058, 73372, 34392, 70842, 77285, 39316, 52915, 95849, 78367, 58712, 57364, 29813, 30455, 8261, 84899, 45314, 54047, 22733, 71602, 66166, 52414, 74058, 70581, 38131, 98900, 2205, 59776, 88392, 5949, 44001, 76226, 64413, 49506, 12158, 35385, 81600, 6784, 990, 38873, 99394, 39060, 20595, 15062, 12360, 78138, 63002, 77992, 2562, 96193, 3736, 47221, 985, 58162, 88279, 64889, 21303, 3155, 38133, 90735, 95239, 72937, 85669, 64654, 5288, 42463, 50617, 98464, 35341, 65947, 51172, 91425, 95142, 18575, 88332, 39422, 60500, 69912, 75895, 68845, 67615, 91207, 98570, 80770, 70388, 35001, 73229, 6498, 78548, 62267, 84544, 49200, 954, 76139, 21577, 73797, 35378, 18917, 98812, 99614, 64105, 14743, 96391, 46951, 80303, 56547, 2719, 43021, 29442, 43392, 49631, 90804, 36060, 27206, 53657, 92975, 60508, 95873, 7940, 77141, 91834, 8927, 32639, 4392, 57948, 62852, 32595, 44325, 22379, 64826, 75993, 92329, 60623, 84763, 58409, 55505, 35835, 72444, 88118, 65705, 14391, 70379, 53752, 67186, 53780, 67506, 61968, 68783, 85674, 17451, 78123, 93651, 2491, 96432, 69468, 29931, 92753, 32039, 25957, 60261, 84320, 63204, 86958, 44177, 45820, 86045, 24765, 96844, 85593, 2541, 16975, 11899, 27449, 95794, 5471, 86292, 6424, 13068, 10857, 15513, 10624, 34514, 50096, 21976, 58259, 36444, 93928, 15171, 15222, 16776, 97885, 46032, 16924, 35559, 29241, 78983, 86804, 48343, 42506, 4199, 89249, 83559, 19232, 33734, 74625, 22787])","CNN(layers=[LTypeLayer(l_type=DropoutL(rate=Rate(rate=6.136475208640157e-06)), layer=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='elu'))), DropoutL(rate=Rate(rate=6.645136424650798e-06)), DenseL(units=Units(units=1024), activation=Activation(activation='tanh'))])","{<class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'int'>: 0, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'str'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'float'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Activation'>: 0}"
0.005687305238097906,2.167210578918457,12,cnn,"Genotype(dna=[87183, 81144, 25885, 29954, 16150, 77939, 6363, 56080, 44577, 53127, 99260, 41645, 57722, 58959, 12024, 63569, 58385, 25528, 90630, 83299, 70244, 76169, 57851, 51180, 59478, 44742, 50508, 34933, 37275, 95807, 74469, 88188, 13919, 71682, 13735, 33994, 67715, 65488, 81903, 87473, 16714, 44300, 21102, 62776, 6912, 61364, 78463, 60475, 40947, 62439, 53822, 87953, 39763, 26065, 6309, 39527, 3885, 94513, 35659, 45885, 69577, 25237, 55335, 40811, 98828, 11611, 85261, 64658, 92640, 21320, 1617, 71723, 18542, 40582, 86329, 89155, 56069, 1723, 72838, 51470, 98091, 3624, 22966, 72779, 18559, 32389, 3428, 44767, 81350, 87721, 49639, 4051, 70774, 27076, 65074, 58948, 98891, 44747, 47033, 7170, 15720, 47925, 4668, 85722, 32222, 70775, 70416, 6024, 66365, 1273, 26406, 74605, 50608, 52956, 51471, 50016, 39992, 35281, 26193, 27336, 73891, 74888, 33126, 88654, 82041, 10735, 31309, 10466, 95028, 98122, 73296, 32139, 94634, 99145, 29041, 32829, 92529, 48865, 44286, 63983, 283, 20731, 24147, 94332, 1145, 45657, 92759, 65800, 18451, 89222, 27203, 42691, 42661, 1219, 67294, 7208, 81414, 71226, 52820, 47223, 51472, 78167, 80484, 47444, 18068, 84090, 81526, 70372, 6455, 35639, 63933, 28136, 9504, 74367, 67669, 47168, 72266, 99510, 91875, 77721, 89143, 54968, 73998, 1357, 19828, 81742, 20990, 80161, 6008, 6971, 12965, 43375, 83700, 8192, 70485, 10357, 80125, 95766, 55398, 59674, 13197, 45409, 36999, 11091, 70909, 10821, 76397, 73058, 3182, 7366, 40381, 94293, 13910, 11167, 94601, 11183, 8931, 84153, 77456, 99649, 49223, 22343, 84074, 39875, 89079, 16862, 15675, 78273, 75966, 3532, 8398, 76794, 19686, 10384, 57034, 43337, 79888, 52970, 29836, 45580, 12587, 51754, 34691, 85136, 4890, 85868, 44677, 24698, 73614, 26810, 32633, 20183, 29725, 89706, 68576, 6116])","CNN(layers=[DropoutL(rate=Rate(rate=6.415191172696946e-06)), LTypeLayer(l_type=ConvL(filters=Filters(filters=128), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='elu')), layer=LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='selu')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu'))))])","{<class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'int'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'str'>: 0, <class 'examples.CNN.Units'>: 0, <class 'float'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0}"
0.013203221373260021,2.8571882247924805,13,cnn,"Genotype(dna=[24296, 22300, 94661, 40815, 81062, 6388, 30322, 99686, 22440, 14162, 14242, 86301, 95504, 83240, 65051, 85343, 71022, 86040, 84768, 22712, 63823, 22852, 2022, 64864, 89962, 56412, 74296, 10811, 85202, 19823, 98359, 84706, 26997, 63765, 73232, 53172, 97651, 79030, 48703, 76838, 3753, 27764, 40638, 51410, 54337, 67392, 7384, 9520, 35243, 10085, 12853, 22429, 72071, 77978, 33850, 96154, 88549, 90966, 5582, 28832, 5824, 42131, 89849, 1772, 10384, 78612, 46051, 38471, 79320, 43017, 66789, 23788, 65806, 52059, 31827, 25008, 76752, 99281, 69604, 72203, 30427, 90603, 25771, 48822, 47392, 49712, 90420, 64488, 95768, 47487, 52443, 83025, 51141, 33852, 51027, 83229, 91737, 33153, 71994, 20348, 25, 24799, 69235, 99014, 54133, 98924, 93795, 69565, 15268, 86637, 55870, 84776, 62766, 99321, 28589, 22744, 48503, 42493, 89398, 49427, 26394, 23827, 52738, 10084, 46772, 5535, 27147, 37952, 95274, 42985, 14273, 64934, 82077, 1998, 9808, 37119, 95103, 75573, 11029, 97076, 27704, 11950, 47302, 25288, 56110, 84405, 37068, 39411, 55969, 82516, 52243, 32315, 75380, 27628, 50965, 34767, 26235, 4656, 63054, 39297, 12227, 88194, 51207, 27597, 34993, 36873, 181, 57385, 68603, 65607, 79730, 73688, 63105, 17359, 58009, 60707, 87294, 48658, 51576, 29379, 55325, 18948, 80694, 6873, 82063, 30619, 30818, 81265, 20929, 90143, 86650, 75608, 51870, 5435, 94741, 30126, 21870, 25555, 35489, 82301, 21441, 17020, 68343, 97742, 75555, 61222, 16408, 20712, 82346, 83456, 43286, 91510, 73825, 92773, 25623, 29557, 29622, 98741, 4460, 95954, 20159, 80842, 76464, 41556, 56048, 17213, 38309, 54885, 3284, 4494, 32574, 70162, 59986, 3339, 1248, 97985, 21650, 53534, 54472, 21696, 81495, 91122, 89422, 60689, 83066, 6123, 90449, 14729, 87467, 2046, 70434, 85899, 10590, 20752, 99615, 3296])","CNN(layers=[LTypeLayer(l_type=DropoutL(rate=Rate(rate=7.825950853028643e-05)), layer=DropoutL(rate=Rate(rate=2.228064702998975e-05))), DropoutL(rate=Rate(rate=5.793608491112605e-06)), ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'int'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Start'>: 1, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.DenseL'>: 0}"
0.02627798169851303,2.3804523944854736,14,cnn,"Genotype(dna=[26807, 23647, 26476, 36556, 47649, 10886, 34284, 63720, 2200, 96328, 13177, 46966, 33512, 9186, 72596, 18549, 39310, 32577, 70411, 22881, 32962, 96710, 58652, 4112, 98545, 67035, 33275, 57203, 92086, 70602, 2216, 6571, 92208, 28291, 7105, 70408, 99305, 95219, 20962, 7095, 42138, 44335, 47453, 35767, 61405, 89187, 15283, 32421, 12660, 22636, 13117, 89767, 87799, 84119, 34200, 15329, 99832, 25721, 76371, 40385, 78504, 75445, 55973, 51906, 3164, 52735, 69060, 67785, 27069, 11802, 25787, 38775, 13598, 40345, 94573, 70075, 38016, 34935, 20426, 91588, 81150, 82463, 20802, 91652, 13319, 50293, 44225, 40515, 11026, 76690, 19616, 54265, 63326, 68740, 28251, 16127, 17343, 83083, 71989, 76951, 76050, 87632, 69635, 16544, 85444, 98602, 23783, 20387, 42734, 1996, 23906, 93081, 38841, 75588, 26282, 67365, 78585, 61447, 34219, 59605, 51803, 47648, 76020, 19477, 58616, 4899, 46367, 46126, 80981, 70395, 47296, 12043, 63296, 32270, 2675, 46973, 55416, 29282, 40006, 4934, 58926, 20438, 45176, 58210, 97941, 49247, 85814, 77026, 95161, 32344, 41599, 7567, 90275, 71231, 88843, 64809, 15181, 66166, 17869, 92413, 63391, 565, 52217, 29224, 63523, 57889, 66304, 30802, 17431, 78436, 80077, 19634, 5707, 64607, 46110, 68562, 39087, 73787, 5934, 16246, 57006, 52333, 37846, 47656, 54716, 24695, 28335, 99049, 66171, 86511, 22936, 4578, 98223, 30200, 28158, 54898, 73205, 67264, 40502, 12407, 32862, 14193, 59153, 25827, 15734, 8210, 55774, 60476, 31334, 32848, 27712, 28436, 36930, 98303, 36254, 21846, 26065, 88630, 38544, 54833, 53274, 62635, 88616, 52656, 82741, 13733, 10975, 63332, 32475, 28707, 82418, 41641, 58114, 4393, 61326, 56599, 92617, 98438, 85057, 15503, 75798, 18860, 35901, 23431, 63830, 25294, 96150, 36427, 69620, 21903, 25140, 77415, 55822, 76426, 2664, 9131])","CNN(layers=[DenseL(units=Units(units=128), activation=Activation(activation='relu')), ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'int'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'str'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'float'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1}"
0.01621018350124359,2.7870688438415527,15,cnn,"Genotype(dna=[12255, 15515, 13214, 13556, 55952, 37199, 5928, 83060, 19176, 58578, 47182, 55026, 80788, 30826, 16446, 29069, 62993, 16188, 41382, 21792, 81979, 34866, 13272, 67091, 3341, 78106, 19472, 95038, 61691, 70996, 53189, 16029, 81865, 35181, 98458, 68377, 22712, 52894, 65609, 6287, 82272, 85895, 56648, 69070, 51325, 49938, 65896, 80824, 10929, 17683, 95772, 99551, 46418, 7596, 84221, 28684, 14725, 11338, 60280, 54181, 40712, 96062, 96520, 31156, 27033, 63123, 79437, 8149, 59496, 71074, 61988, 47880, 3814, 21581, 83041, 49734, 15755, 87160, 30965, 10744, 43889, 24661, 59055, 57907, 24376, 3553, 52011, 37792, 11247, 31533, 27617, 3367, 9263, 12015, 12154, 93166, 53991, 51281, 12474, 11132, 60395, 80638, 8589, 13557, 15065, 25618, 41096, 49750, 51070, 39443, 32063, 42687, 47670, 59000, 16293, 83962, 1167, 73648, 22307, 57197, 34870, 63820, 84531, 43949, 28407, 89973, 60102, 23634, 82448, 29753, 97495, 17362, 71292, 19320, 20020, 40033, 75492, 98762, 13215, 67250, 1113, 49483, 35467, 3845, 69498, 51196, 83008, 69486, 17538, 57166, 29644, 15695, 38607, 35700, 96198, 25669, 61079, 63039, 61858, 2653, 23476, 84973, 68449, 8830, 43924, 91983, 8609, 35323, 21090, 84626, 50654, 71152, 56307, 1038, 85534, 79888, 26576, 29062, 63758, 51788, 36085, 62218, 54773, 13983, 11749, 16458, 50344, 94003, 20113, 60225, 81245, 18846, 54068, 49356, 15605, 89100, 49729, 44589, 91715, 15927, 51633, 64148, 600, 13139, 20378, 92843, 85942, 60546, 96439, 85950, 49234, 75867, 40555, 72092, 59382, 98489, 42230, 48336, 53179, 91388, 69981, 84741, 62759, 46028, 39915, 8276, 94831, 61194, 76961, 16526, 12373, 89854, 44401, 3271, 73743, 62653, 78436, 28147, 92791, 35706, 44175, 17028, 53156, 56551, 78899, 71179, 7919, 6899, 11343, 57321, 11107, 7754, 17586, 84687, 94199, 72939])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), DropoutL(rate=Rate(rate=6.1889613685031376e-06)), DropoutL(rate=Rate(rate=1.719986240110079e-05))])","{<class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'int'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'str'>: 0, <class 'examples.CNN.Start'>: 1, <class 'float'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.Parameter'>: 0}"
0.014423207379877567,2.7172486782073975,16,cnn,"Genotype(dna=[80208, 46335, 24012, 20433, 61529, 90162, 24769, 8630, 16560, 42647, 62042, 4850, 39112, 12096, 24864, 71396, 98772, 1363, 66817, 87323, 95900, 71588, 38285, 87781, 16866, 12480, 82214, 14029, 70478, 882, 56648, 2889, 25795, 60911, 69926, 18828, 28839, 96704, 32973, 77490, 93537, 2620, 91203, 96288, 33435, 72848, 66404, 7769, 84438, 2708, 23829, 61856, 62768, 82428, 1727, 96982, 26278, 23706, 8437, 68714, 78309, 86507, 44772, 63761, 8038, 11426, 13502, 58503, 9672, 21043, 69197, 93570, 52871, 43669, 95698, 48945, 92614, 27702, 45696, 95874, 40197, 71227, 2723, 53027, 74403, 95193, 8200, 22512, 15115, 61552, 86724, 292, 33168, 41397, 26648, 35775, 47110, 53515, 98218, 99355, 48550, 37389, 25210, 87654, 71789, 97945, 20517, 53656, 57783, 57288, 57302, 95743, 91579, 60171, 60380, 84410, 20436, 96481, 20041, 71718, 7630, 70467, 68062, 48269, 45544, 22378, 94308, 91347, 65684, 84768, 82221, 32214, 17302, 51415, 85724, 19108, 63855, 62148, 31510, 87411, 54178, 2931, 25355, 63236, 47550, 22288, 55009, 965, 82159, 79332, 93477, 30109, 41189, 88906, 63768, 99796, 61631, 49494, 58025, 24601, 8368, 85420, 42355, 50815, 62034, 64152, 41444, 86515, 34482, 73123, 69778, 10455, 46677, 7613, 42607, 41514, 54500, 81438, 81493, 84532, 67990, 64936, 21832, 69293, 82792, 8972, 73696, 67206, 45224, 33669, 57861, 52516, 38001, 33951, 80716, 9271, 8376, 43046, 5387, 95294, 61197, 15565, 36609, 12953, 40050, 33657, 70568, 39510, 21431, 17832, 11996, 37603, 47798, 5840, 52738, 80353, 89291, 6857, 9121, 94123, 11364, 24245, 81713, 66886, 15283, 48960, 13377, 67879, 73106, 73584, 54913, 56891, 21373, 52589, 21591, 97165, 22378, 21170, 90842, 27490, 47196, 42983, 87099, 34269, 61387, 80492, 36008, 23523, 31750, 1272, 4197, 30192, 75034, 40026, 47611, 84204])","CNN(layers=[LTypeLayer(l_type=DenseL(units=Units(units=32), activation=Activation(activation='selu')), layer=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')))])","{<class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'int'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'str'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'float'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Start'>: 1}"
0.0043165129609405994,3.427963972091675,17,cnn,"Genotype(dna=[6403, 84219, 38039, 62070, 24441, 5016, 4805, 55172, 43048, 52291, 83253, 95942, 24948, 27455, 53313, 49929, 12740, 17653, 72634, 77901, 62285, 23658, 12452, 62556, 18276, 74241, 51487, 55426, 32205, 46773, 31525, 88070, 83116, 13258, 59720, 40310, 58193, 58602, 41881, 84915, 30498, 63208, 67718, 45727, 39971, 76997, 42026, 71808, 1385, 62213, 34603, 55823, 38348, 68177, 74786, 68181, 50643, 61924, 72376, 70979, 54823, 20384, 53736, 18793, 94799, 32731, 44520, 87249, 78749, 55383, 39655, 32829, 75021, 73206, 719, 47120, 99005, 84794, 35468, 66948, 76591, 46976, 18578, 10891, 93906, 11886, 84723, 50713, 69018, 26237, 41930, 44255, 2828, 98049, 99808, 23603, 85543, 89464, 51454, 88492, 11513, 86054, 53620, 65717, 43760, 39509, 95803, 70901, 19353, 26093, 36169, 37672, 27455, 59063, 42315, 40183, 62647, 30402, 37759, 53544, 81284, 67426, 56339, 25455, 98513, 21872, 47001, 37732, 47438, 78448, 36322, 89466, 72799, 21867, 71006, 96969, 1174, 29646, 9273, 37516, 50, 81259, 1854, 13206, 84849, 13067, 95216, 95306, 3548, 26232, 12273, 11733, 34130, 50894, 95311, 77532, 53364, 82274, 14830, 13290, 73773, 32822, 27125, 57586, 46519, 43907, 8481, 37409, 46703, 7931, 97679, 69124, 99019, 56192, 48258, 25482, 89797, 26509, 22065, 63514, 85002, 19380, 38223, 77974, 36671, 29749, 41561, 81676, 71958, 80288, 30275, 82731, 25263, 46578, 58447, 56977, 8927, 59848, 28259, 94646, 93918, 53515, 68308, 8538, 44415, 21738, 46302, 15411, 19463, 30734, 30972, 84636, 5130, 85861, 17194, 45763, 32559, 73793, 33409, 88232, 53562, 56146, 7855, 60840, 24195, 24866, 97025, 79127, 64237, 62638, 83477, 99686, 66984, 46340, 45955, 34763, 31085, 1351, 67490, 91571, 30712, 13969, 97205, 75844, 34252, 69367, 13197, 28363, 4446, 40589, 1366, 19844, 77322, 53572, 631, 83785])","CNN(layers=[DenseL(units=Units(units=32), activation=Activation(activation='linear')), ConvL(filters=Filters(filters=32), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='linear')), LTypeLayer(l_type=DenseL(units=Units(units=128), activation=Activation(activation='selu')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu')))])","{<class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'int'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'str'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'float'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0}"
0.009296031668782234,2.1811320781707764,18,cnn,"Genotype(dna=[18998, 12784, 30321, 37221, 50332, 46235, 26349, 44518, 29807, 91137, 33426, 35769, 65183, 94873, 11443, 66294, 48001, 69203, 79140, 36125, 4272, 27013, 25531, 7643, 10404, 99898, 23242, 1791, 55752, 4393, 46974, 33677, 88868, 22850, 69844, 27475, 62684, 65316, 93684, 33736, 11481, 63248, 93169, 4717, 66333, 98177, 57123, 88880, 43029, 8772, 52665, 42278, 85091, 757, 65746, 61644, 83053, 81190, 52208, 48181, 26962, 2504, 86455, 87916, 11944, 87054, 58800, 17134, 66054, 70621, 37655, 82699, 8637, 49738, 8405, 33814, 14459, 26841, 20819, 99816, 97743, 35805, 37224, 31184, 5146, 40786, 34410, 90396, 3677, 81176, 66502, 50228, 34821, 38178, 45072, 31129, 6537, 93224, 61307, 46775, 69938, 22045, 52798, 4499, 49016, 82540, 85214, 11771, 13091, 63093, 73452, 15236, 20307, 11556, 38209, 33796, 5670, 1031, 66506, 18873, 13488, 43456, 90629, 47321, 76727, 85576, 29486, 10719, 76278, 7149, 73257, 40312, 67266, 38837, 5875, 46314, 51634, 74867, 63848, 519, 29684, 9324, 39834, 2704, 90968, 35416, 73413, 44312, 20319, 96485, 17146, 83345, 8350, 41517, 24133, 61036, 49476, 45430, 87310, 22973, 61483, 62505, 87963, 30747, 40408, 74633, 75357, 7964, 86890, 51928, 70499, 17046, 53029, 75382, 45396, 32078, 76457, 17807, 83950, 82269, 7600, 49173, 97115, 19293, 57940, 11375, 63495, 58920, 98313, 99862, 21134, 66329, 74419, 64932, 98121, 42376, 98618, 73159, 55613, 39138, 8254, 49141, 69074, 45995, 17111, 12972, 27602, 42387, 48023, 53090, 43483, 55307, 48913, 12841, 4760, 29062, 87800, 87884, 23454, 91609, 81207, 55415, 47241, 90244, 35332, 45755, 56233, 71228, 95807, 67099, 62921, 3954, 5764, 64667, 8037, 65954, 88242, 72361, 21408, 13876, 34632, 20608, 91618, 33332, 88500, 58492, 80724, 27641, 71885, 68210, 10684, 65491, 58285, 16866, 26398, 24262])","CNN(layers=[LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=5), strides=Strides(strides=1), padding=Padding(padding='same'), activation=Activation(activation='tanh')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='selu')))])","{<class 'int'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Units'>: 0}"
0.018537776544690132,2.754413604736328,19,cnn,"Genotype(dna=[34429, 94605, 88674, 28892, 39932, 20195, 86004, 76228, 5954, 37794, 5057, 14562, 73146, 95647, 56487, 12191, 75242, 1999, 2452, 27511, 24011, 55283, 87779, 51319, 50354, 42339, 16465, 73000, 2508, 97654, 35977, 59315, 3489, 21044, 34605, 70581, 75063, 22766, 34483, 98955, 29235, 58841, 40390, 1558, 94091, 43188, 2794, 70490, 87441, 91417, 76905, 77804, 6905, 2242, 89476, 14834, 49220, 21973, 17429, 23373, 49813, 11070, 92647, 76264, 53507, 93456, 27336, 55203, 57846, 62176, 98413, 38964, 99082, 66674, 92233, 56001, 91397, 51624, 86194, 57644, 61565, 53644, 6728, 92593, 57817, 61155, 49095, 37731, 31820, 62, 97761, 64461, 75236, 10172, 93828, 52914, 91198, 72890, 93804, 81039, 10275, 20780, 4867, 47557, 28352, 33605, 45502, 6510, 7499, 36660, 92114, 72453, 40884, 58270, 52381, 30604, 49834, 98409, 51480, 6018, 12228, 68659, 3418, 64318, 3514, 3773, 62490, 11636, 25384, 41444, 18693, 82670, 40519, 90211, 81921, 4878, 82816, 83605, 33959, 85096, 58296, 87040, 9459, 13471, 16248, 6954, 44789, 8921, 66596, 42260, 97599, 56599, 51247, 49331, 21475, 22030, 43318, 59765, 58992, 11318, 97644, 11696, 60174, 56079, 19277, 28963, 93353, 12363, 37892, 96333, 72136, 11475, 61034, 1530, 65460, 56367, 78204, 63867, 64048, 49812, 8513, 25121, 30327, 77214, 35963, 19636, 95709, 79978, 76833, 55980, 28322, 64618, 11641, 16516, 20715, 94099, 95004, 22809, 75005, 20259, 36049, 75019, 64374, 63052, 71199, 14468, 67426, 91890, 40819, 67051, 72153, 46230, 89429, 31333, 88876, 87576, 18732, 95716, 40096, 27029, 19478, 60627, 71586, 58888, 65226, 14895, 89516, 27873, 37521, 95046, 64184, 91979, 24957, 58839, 152, 33527, 6091, 24819, 15375, 84326, 9012, 62045, 29201, 59619, 90401, 71436, 1019, 26151, 13778, 75960, 15569, 84985, 61007, 47574, 60129, 42907])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=5), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'int'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'str'>: 0, <class 'examples.CNN.LType'>: 0, <class 'float'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Units'>: 0}"
0.0031384704634547234,2.2113051414489746,20,cnn,"Genotype(dna=[20512, 71189, 87476, 95615, 49, 67272, 83483, 96968, 84137, 5011, 63163, 46469, 35012, 21076, 26792, 73288, 94726, 23156, 60368, 9397, 52223, 5106, 15437, 42814, 26979, 28809, 28295, 89991, 86690, 49362, 16617, 52576, 90753, 58673, 1938, 86584, 42238, 58232, 48281, 34541, 34015, 20146, 82601, 69460, 34130, 77503, 41776, 60215, 68011, 8294, 22082, 84937, 75615, 55352, 99654, 98666, 94132, 76319, 25671, 1521, 73696, 86886, 30358, 35276, 79057, 99726, 89710, 95647, 2125, 48886, 36144, 40223, 72099, 75557, 54404, 85185, 72074, 43413, 38323, 70301, 78390, 16771, 46626, 36035, 28331, 71128, 2619, 75871, 22808, 17320, 61800, 3162, 91069, 70241, 93133, 45774, 74985, 6597, 32812, 57040, 29585, 52349, 95883, 45644, 70730, 52389, 96409, 91569, 39560, 13009, 87468, 1498, 6271, 3941, 29848, 21610, 89103, 68950, 450, 49324, 33511, 47344, 59693, 80597, 9458, 83214, 57464, 33532, 96375, 13616, 35055, 99793, 42515, 73941, 96508, 99242, 84292, 44537, 63937, 91339, 76730, 96205, 90091, 79664, 62574, 63531, 92480, 19019, 42858, 43162, 35451, 5800, 21425, 3869, 86383, 86032, 30369, 85861, 80106, 49349, 82405, 91664, 79844, 40401, 5591, 67644, 43678, 25915, 69136, 94426, 64188, 81358, 62054, 43729, 33878, 19392, 96240, 97961, 7170, 68601, 40619, 68016, 51405, 13691, 50249, 17316, 76759, 37370, 15638, 59362, 85873, 55318, 89422, 68186, 57564, 66274, 71724, 33107, 18111, 4228, 81228, 68626, 49382, 85090, 373, 19233, 15354, 8747, 32126, 77589, 93625, 55184, 1575, 40344, 6098, 14542, 63562, 75634, 30550, 45069, 84380, 23693, 69738, 60213, 54332, 60032, 60286, 38752, 10135, 91666, 8577, 65713, 17406, 75016, 2624, 30582, 71113, 22394, 64546, 29899, 68818, 38993, 65054, 10944, 10967, 41241, 31, 80889, 11999, 32894, 17162, 78026, 58073, 4656, 28031, 92326])","CNN(layers=[LTypeLayer(l_type=DenseL(units=Units(units=32), activation=Activation(activation='linear')), layer=DenseL(units=Units(units=64), activation=Activation(activation='selu'))), LTypeLayer(l_type=ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='elu')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu'))), LTypeLayer(l_type=DropoutL(rate=Rate(rate=1.8532246108228318e-05)), layer=LTypeLayer(l_type=PoolL(pool_type=PoolType(pooltype='avgpool'), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='same')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu'))))])","{<class 'examples.CNN.PoolType'>: 0, <class 'int'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'str'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'float'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0}"
0.019541384652256966,2.730835199356079,21,cnn,"Genotype(dna=[70080, 8414, 12399, 1298, 26596, 72347, 73713, 17236, 86556, 76770, 62135, 14573, 33454, 44989, 65035, 7398, 40570, 32027, 45810, 264, 53770, 21898, 71862, 37725, 94772, 7357, 61213, 34627, 34793, 46870, 58940, 62351, 57580, 57191, 74246, 58472, 87997, 95489, 46794, 78327, 43716, 35821, 24628, 75677, 30702, 83550, 28719, 58995, 73575, 48576, 58425, 99070, 38574, 82288, 69243, 45782, 10770, 3257, 56859, 50450, 90115, 91015, 12182, 56637, 45099, 81076, 91588, 2892, 13945, 82940, 54923, 53243, 80999, 46470, 68565, 61835, 90806, 59194, 7998, 53865, 27210, 14730, 14516, 83352, 70629, 84653, 34954, 6408, 3409, 79904, 26585, 13972, 5806, 89004, 13474, 84556, 50625, 82515, 70913, 69618, 89239, 7493, 58798, 28312, 27636, 11327, 93129, 68244, 21435, 98472, 15496, 14356, 49109, 62266, 78797, 95717, 82819, 37942, 15306, 80395, 36005, 5023, 6756, 67563, 94872, 15440, 5122, 86355, 31269, 24322, 21761, 55506, 56533, 47286, 97339, 84188, 74548, 10475, 6699, 41486, 53281, 70850, 30553, 72105, 57218, 12059, 99180, 91277, 32429, 12661, 18941, 26954, 65401, 29180, 85902, 64598, 46898, 55080, 71852, 79859, 96326, 86651, 38127, 91934, 9453, 29693, 11696, 73472, 88643, 11970, 6166, 82857, 84414, 46504, 40129, 26343, 22779, 87750, 20122, 3180, 8486, 49342, 15776, 12358, 65849, 54272, 2626, 10633, 87529, 8052, 15382, 78206, 7256, 43219, 53033, 18136, 51471, 4214, 86950, 38498, 63854, 73756, 16252, 28955, 31199, 6616, 21504, 84442, 42140, 26910, 83259, 65444, 99109, 94425, 73516, 29520, 31388, 12059, 41215, 81238, 34567, 78966, 94492, 92959, 88586, 62822, 55160, 44875, 84495, 19682, 39717, 58226, 34998, 81306, 76930, 76999, 42461, 39664, 67337, 94221, 42969, 36379, 91660, 46624, 54740, 35502, 72811, 5347, 77920, 67003, 26647, 53709, 38005, 74617, 44540, 99039])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'int'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'str'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'float'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0}"
0.016398504376411438,2.640610694885254,22,cnn,"Genotype(dna=[55489, 84713, 37783, 86763, 72813, 55002, 17617, 25826, 80010, 12138, 54967, 85096, 75485, 10577, 91722, 69834, 63228, 23320, 36810, 15867, 70496, 45163, 30392, 68215, 52517, 9566, 19364, 39806, 3874, 83362, 51543, 4470, 90334, 68681, 38349, 77170, 51477, 5806, 34895, 41862, 44831, 10434, 18223, 51066, 71981, 29574, 24147, 76407, 18560, 13769, 44576, 69823, 60042, 63485, 21955, 57857, 66703, 33408, 34263, 59646, 72280, 4854, 11048, 81849, 74550, 5873, 22030, 23459, 45667, 17607, 64425, 88798, 90586, 28450, 27009, 21762, 56143, 54231, 60933, 4390, 50455, 27625, 73593, 53128, 57815, 68421, 73809, 89201, 5394, 27963, 556, 97133, 14054, 88982, 53694, 40954, 61436, 21082, 7530, 81185, 23528, 67468, 31050, 98140, 43249, 49090, 91548, 14857, 65863, 41537, 10427, 40743, 15069, 85845, 37995, 18894, 632, 91909, 60970, 20476, 22793, 40965, 21705, 18244, 14017, 65417, 10009, 64672, 27102, 95218, 46176, 16, 78477, 83009, 67943, 43958, 55140, 97012, 58859, 32610, 27310, 3182, 30146, 91501, 54597, 53363, 52164, 88975, 93538, 28482, 50727, 81956, 16201, 2705, 509, 59484, 37183, 50544, 75593, 20644, 93724, 8310, 75288, 80034, 28433, 53447, 7043, 59625, 78915, 78056, 99266, 59853, 89088, 32100, 47272, 61611, 59668, 10362, 42174, 47757, 56467, 37564, 76020, 38113, 6712, 69330, 10926, 59813, 87371, 87957, 52339, 49372, 76783, 15506, 99616, 96843, 92906, 39837, 77773, 81944, 56329, 25386, 10985, 84508, 86079, 48764, 51675, 62231, 71162, 12494, 41282, 30832, 47479, 55301, 25936, 62115, 71700, 84392, 41039, 39061, 48783, 90447, 35827, 54235, 46023, 75938, 90844, 7094, 91514, 15991, 52904, 79324, 15964, 67869, 57389, 3039, 51859, 23800, 96493, 5778, 83345, 98667, 76951, 37269, 59885, 2755, 17579, 34112, 77362, 8365, 93478, 70960, 90897, 53959, 64585, 84112])","CNN(layers=[LTypeLayer(l_type=DenseL(units=Units(units=32), activation=Activation(activation='selu')), layer=DropoutL(rate=Rate(rate=4.118955432902216e-05))), LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), layer=DropoutL(rate=Rate(rate=3.150995714645828e-05)))])","{<class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'int'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'str'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'float'>: 0, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Strides'>: 0}"
0.02049885131418705,2.5545315742492676,23,cnn,"Genotype(dna=[23996, 17350, 62559, 31019, 1740, 72365, 96394, 71082, 35904, 73998, 4614, 25054, 71656, 66393, 96020, 9081, 75285, 23369, 96512, 92379, 78858, 62733, 35098, 16339, 15183, 4256, 25199, 30657, 21651, 30176, 53247, 67737, 74202, 67310, 2335, 46308, 10701, 35471, 2769, 82248, 26632, 26042, 9948, 99474, 32934, 58726, 81951, 70923, 22132, 92597, 82125, 68331, 54914, 48881, 99414, 70970, 59724, 32531, 522, 37795, 77600, 17197, 56474, 15448, 39088, 12992, 81055, 77193, 6116, 7379, 88544, 96585, 32203, 15388, 1238, 82165, 3805, 84328, 99852, 49787, 85459, 29519, 64740, 43924, 81598, 44132, 970, 45445, 4295, 78160, 43991, 74485, 47355, 14905, 57517, 49057, 7533, 60172, 16041, 8057, 55030, 58830, 59133, 80126, 21059, 95649, 29560, 8704, 83137, 92913, 54304, 38256, 86713, 82031, 89244, 4370, 3165, 6133, 20200, 15467, 85666, 52247, 51129, 39682, 59212, 47711, 11206, 13394, 46591, 83817, 45288, 53907, 46448, 65402, 4720, 34295, 68859, 72027, 28410, 18542, 73, 12288, 42997, 92348, 10704, 66257, 43889, 8195, 13612, 30123, 77615, 83552, 78140, 70702, 13647, 82188, 24978, 75986, 14969, 30897, 90384, 86556, 56114, 92262, 49115, 65879, 50670, 93459, 23273, 80736, 39077, 87782, 8983, 83209, 66985, 82955, 99070, 21792, 46401, 57895, 491, 31562, 27561, 75431, 98168, 48456, 42659, 44662, 2960, 91846, 67052, 2367, 59239, 45137, 93518, 65169, 10100, 34859, 42846, 96537, 30278, 56558, 87708, 5509, 53119, 62372, 98980, 45576, 73371, 44992, 82373, 15962, 97551, 79362, 56183, 41508, 29772, 82604, 70355, 85291, 26757, 23469, 44276, 23262, 42775, 5710, 23254, 10414, 57245, 47533, 78951, 75342, 82586, 95754, 93161, 63938, 68650, 76329, 50460, 97139, 96585, 93548, 51064, 29837, 82957, 33429, 52224, 53081, 678, 64259, 59410, 61376, 52432, 60692, 78467, 94169])","CNN(layers=[LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=5), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), layer=DropoutL(rate=Rate(rate=6.9776853622116475e-06)))])","{<class 'int'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0}"
0.004334091208875179,2.731865406036377,24,cnn,"Genotype(dna=[81080, 69458, 14666, 47142, 34280, 99903, 41107, 37908, 63020, 62886, 18388, 40377, 80776, 29447, 15295, 16935, 54431, 2015, 69034, 79632, 57521, 12305, 62765, 44334, 74800, 39674, 88880, 46409, 1437, 74394, 44435, 4526, 41460, 65590, 25212, 84189, 96082, 76384, 45480, 29670, 62849, 1895, 16575, 90914, 6968, 90011, 31767, 57496, 19119, 10908, 76652, 67017, 51514, 21986, 88071, 62198, 74528, 90414, 66024, 27543, 22790, 94675, 31834, 19846, 98074, 1135, 49144, 94015, 64712, 59414, 24751, 82146, 70291, 31121, 50130, 51371, 41924, 25063, 8280, 97269, 39344, 15087, 33100, 46455, 93772, 43593, 89023, 51769, 27950, 86810, 36812, 49598, 80377, 7205, 4557, 80285, 92198, 15452, 25813, 76533, 91393, 99575, 24917, 74377, 65082, 71526, 42285, 27243, 10150, 40335, 85166, 91068, 75666, 92119, 83222, 28015, 12683, 87461, 54040, 30687, 99337, 21631, 66489, 434, 75656, 56031, 77526, 21377, 47828, 3782, 25118, 92, 68685, 5146, 67673, 85445, 97847, 58708, 26602, 5220, 25046, 79077, 90203, 86587, 67926, 32030, 45598, 2227, 79918, 36392, 72906, 95103, 39953, 2723, 51151, 76874, 90569, 32689, 72027, 62164, 61080, 35797, 31008, 78954, 55896, 66794, 68323, 88373, 18680, 45758, 97910, 66071, 42196, 62623, 11845, 22088, 26505, 52914, 27047, 15865, 74486, 75211, 30477, 73943, 39434, 34780, 54569, 61067, 61694, 78199, 42266, 24283, 61241, 84340, 35848, 45766, 99121, 17389, 49013, 44193, 98911, 44539, 64400, 11925, 86006, 37465, 15881, 23722, 18234, 37082, 3382, 1808, 44714, 77020, 30294, 68876, 19826, 23167, 4054, 96599, 86658, 12092, 35758, 56775, 97409, 68613, 36015, 36818, 89150, 4042, 41212, 97355, 3351, 19962, 45232, 97968, 63084, 90314, 21213, 67991, 94980, 32181, 52549, 13543, 71000, 34803, 57624, 53456, 47168, 71554, 10821, 27475, 86658, 64311, 79913, 7399])","CNN(layers=[ConvL(filters=Filters(filters=128), ksize=Ksize(ksize=3), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), DenseL(units=Units(units=512), activation=Activation(activation='linear')), LTypeLayer(l_type=PoolL(pool_type=PoolType(pooltype='avgpool'), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='valid')), layer=LTypeLayer(l_type=DenseL(units=Units(units=1024), activation=Activation(activation='relu')), layer=DropoutL(rate=Rate(rate=5.6254992630595965e-06))))])","{<class 'examples.CNN.PoolType'>: 0, <class 'int'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Start'>: 1}"
0.40352872014045715,2.217264175415039,25,cnn,"Genotype(dna=[72478, 27343, 7465, 51823, 11254, 80189, 4570, 53745, 40858, 32865, 62155, 8691, 8387, 50185, 17884, 12027, 81578, 74781, 54413, 87554, 78064, 80698, 8567, 25485, 66258, 39797, 84020, 87886, 74288, 14862, 59446, 84573, 2673, 60889, 35599, 33315, 49769, 56454, 36337, 69031, 4029, 29560, 40194, 32614, 74655, 34414, 54936, 86861, 19052, 74624, 99534, 51326, 7408, 91347, 1471, 85987, 50821, 92301, 31151, 94205, 60351, 34449, 1620, 10133, 41545, 80045, 20983, 73059, 96031, 4319, 8997, 42790, 72969, 70309, 84192, 75336, 94730, 54312, 19409, 86825, 57394, 61021, 41462, 72113, 91034, 84870, 61983, 87986, 42166, 42990, 67419, 25373, 29344, 79609, 85023, 72652, 35041, 8492, 40272, 83697, 94055, 65704, 41912, 40344, 56114, 35342, 54018, 82046, 84759, 87158, 76231, 28180, 7190, 77359, 37468, 28205, 57672, 2975, 70727, 1997, 32272, 83353, 6556, 68082, 11213, 29762, 94937, 25618, 54937, 37042, 82898, 97478, 55049, 87172, 63796, 22600, 73982, 5818, 34620, 77078, 91355, 5809, 89549, 88888, 27486, 431, 4311, 99491, 82853, 46722, 2137, 90057, 53928, 21079, 33937, 41217, 99673, 97681, 73813, 69899, 44419, 35069, 42841, 84824, 96561, 83226, 30739, 49952, 506, 36257, 44631, 99342, 42919, 11916, 87472, 25968, 11364, 79765, 76283, 94770, 17364, 55802, 67212, 51815, 80347, 91514, 79182, 14109, 43348, 73410, 69341, 89822, 5048, 17246, 54817, 12755, 73238, 83189, 87046, 84959, 37802, 17971, 27515, 34492, 74527, 12570, 27538, 38853, 47434, 72743, 55331, 83963, 18370, 4600, 353, 5726, 8526, 77075, 1094, 74106, 20927, 17423, 92379, 37945, 36375, 46796, 49633, 24753, 56046, 81630, 22121, 6308, 37762, 44719, 32745, 94995, 77572, 78101, 49543, 25277, 9567, 66270, 99868, 73673, 42530, 76850, 30734, 34370, 79465, 42848, 24226, 43830, 79180, 38574, 94242, 62900])","CNN(layers=[LTypeLayer(l_type=DropoutL(rate=Rate(rate=6.235191420376606e-06)), layer=DenseL(units=Units(units=512), activation=Activation(activation='tanh'))), LTypeLayer(l_type=PoolL(pool_type=PoolType(pooltype='avgpool'), ksize=Ksize(ksize=1), strides=Strides(strides=1), padding=Padding(padding='same')), layer=DenseL(units=Units(units=1024), activation=Activation(activation='elu')))])","{<class 'int'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0}"
0.005148440599441528,2.3692679405212402,26,cnn,"Genotype(dna=[80649, 98470, 29611, 47420, 46424, 64463, 29678, 6906, 53782, 65544, 47943, 8762, 49044, 71643, 66066, 75173, 21780, 36993, 9515, 10368, 21110, 10920, 97093, 75175, 22628, 76114, 16547, 76693, 54149, 10823, 5270, 67515, 14844, 58863, 49604, 3837, 73159, 83626, 6743, 9402, 6505, 8752, 98963, 67196, 12264, 30403, 91380, 96414, 11263, 97001, 55534, 64473, 69745, 73381, 37878, 80776, 63767, 51328, 11764, 94594, 38356, 99395, 7871, 49493, 61924, 79075, 39338, 77919, 18846, 65771, 46361, 54926, 27683, 17283, 49834, 23625, 28949, 92695, 33557, 96964, 83617, 6090, 80175, 75595, 18347, 85435, 3414, 26962, 87745, 87118, 2018, 5907, 59733, 44545, 72842, 28470, 63057, 33602, 26649, 51671, 99512, 33841, 92287, 16295, 88692, 98791, 65319, 7637, 61149, 2788, 8783, 61695, 17610, 55386, 78969, 75882, 24931, 42665, 56458, 7110, 42483, 77245, 9783, 93538, 12156, 9731, 60693, 97842, 543, 3338, 31909, 20465, 72770, 85558, 35043, 85903, 92731, 21105, 83108, 24160, 92645, 87013, 4692, 85629, 66714, 12208, 98537, 45872, 48915, 24219, 25991, 83403, 25540, 58355, 31004, 92939, 41683, 8360, 52628, 48586, 74239, 42489, 14460, 11358, 99249, 20902, 80734, 13707, 59586, 32637, 66340, 22512, 47242, 61600, 12519, 87607, 49632, 29143, 33304, 6766, 97409, 37977, 9564, 86313, 23842, 72508, 18298, 16716, 90458, 67977, 13874, 11118, 14722, 31827, 7640, 91565, 67321, 56142, 91821, 93098, 20237, 1258, 33641, 96243, 80668, 34828, 31335, 74993, 68406, 55178, 46752, 43718, 64474, 45441, 46120, 87335, 10139, 69051, 42849, 7490, 51432, 76423, 72707, 64545, 18823, 55524, 40993, 42288, 24361, 27936, 6565, 9062, 90415, 60159, 44834, 44148, 39250, 96891, 32237, 12481, 18633, 51302, 35776, 1767, 59597, 82913, 30644, 71577, 86185, 1967, 42150, 51599, 35381, 37078, 9360, 99056])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), LTypeLayer(l_type=DropoutL(rate=Rate(rate=1.0194719135487817e-05)), layer=LTypeLayer(l_type=DropoutL(rate=Rate(rate=6.651235799611568e-06)), layer=DenseL(units=Units(units=1024), activation=Activation(activation='relu'))))])","{<class 'examples.CNN.Filters'>: 0, <class 'int'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'str'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0}"
0.0129601014778018,2.6560089588165283,27,cnn,"Genotype(dna=[4942, 61341, 51993, 35331, 54068, 80489, 80778, 76866, 97352, 20502, 73398, 53830, 9594, 47817, 82741, 639, 13441, 82963, 69231, 11046, 80289, 43746, 38876, 55598, 20178, 31069, 10448, 12585, 85895, 73344, 21181, 74712, 75920, 65983, 54717, 5018, 89746, 18486, 87048, 85911, 3190, 48645, 52085, 29459, 65632, 53057, 43551, 4425, 70185, 52981, 42427, 47850, 50949, 64301, 13890, 18617, 15314, 66539, 35696, 6596, 20669, 47243, 11485, 62595, 37499, 51246, 94209, 73560, 38519, 44095, 2437, 48022, 43442, 4275, 69094, 85547, 61267, 24927, 84977, 63677, 73616, 26834, 60981, 18890, 80358, 81707, 79513, 28078, 51524, 85553, 90116, 73589, 10573, 65545, 43149, 17793, 65731, 1229, 25686, 38083, 2023, 64382, 85182, 43239, 19320, 96362, 20526, 56544, 63412, 52946, 1673, 54989, 65712, 81885, 2527, 14848, 17166, 70463, 29246, 25602, 59677, 29936, 7974, 54922, 67627, 1590, 58429, 63343, 993, 72992, 38584, 28542, 8520, 56191, 90755, 55960, 12389, 42821, 19243, 18475, 93853, 53349, 32571, 18697, 61796, 90206, 31164, 54389, 96756, 82771, 20563, 96291, 27217, 59957, 38976, 79322, 78500, 80722, 22592, 26613, 69700, 18916, 19470, 43440, 599, 12652, 44391, 26192, 35673, 53108, 21413, 82716, 68062, 99622, 15214, 80510, 44183, 78424, 58693, 65867, 24767, 22616, 10945, 91216, 35839, 65853, 47106, 39913, 53649, 6001, 43548, 17157, 917, 62982, 20717, 22558, 45077, 46450, 40750, 13524, 30283, 34974, 36138, 74269, 14055, 25487, 88491, 37303, 52838, 36576, 1388, 81823, 38064, 40652, 4079, 41501, 23953, 40884, 37680, 51298, 53393, 5239, 22344, 55721, 9063, 60628, 60375, 9967, 21444, 64270, 4067, 92949, 591, 33927, 790, 52799, 49961, 32105, 40567, 34561, 21320, 14951, 64839, 5126, 32288, 13589, 74627, 15675, 72822, 48149, 90857, 55995, 16326, 70210, 67834, 17690])","CNN(layers=[LTypeLayer(l_type=ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu')), layer=DropoutL(rate=Rate(rate=5.211047420531527e-05)))])","{<class 'examples.CNN.Rate'>: 0, <class 'int'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'str'>: 0, <class 'float'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1}"
0.031129632145166397,3.181145668029785,28,cnn,"Genotype(dna=[27162, 81423, 73822, 67954, 77654, 83941, 57134, 17616, 60412, 66648, 75846, 85130, 36264, 16776, 9171, 32718, 6041, 20589, 58598, 42056, 50111, 12606, 56990, 96456, 31788, 49539, 40973, 78560, 96679, 28776, 14969, 38020, 14179, 45255, 44983, 38915, 25407, 91640, 32110, 63453, 99459, 85495, 89328, 22922, 20085, 28631, 80290, 96025, 63318, 66504, 81581, 81417, 30485, 37032, 61065, 23564, 43066, 62340, 89810, 97412, 17035, 33591, 41363, 60185, 79748, 29611, 27880, 51692, 54950, 70754, 36343, 92989, 14765, 32790, 8429, 56927, 16623, 51654, 80777, 14332, 57366, 2062, 21543, 10368, 96634, 30371, 15970, 55245, 61327, 65169, 83878, 42270, 91183, 61442, 83709, 94702, 51307, 71385, 3447, 80050, 73391, 59738, 13994, 10333, 18902, 61034, 79687, 36965, 42516, 12250, 44450, 41900, 66268, 48261, 29451, 34092, 93857, 30311, 85938, 77582, 9596, 25038, 21817, 3757, 50702, 38054, 57435, 13989, 77762, 97701, 45516, 3823, 25309, 15867, 74778, 50310, 51137, 30208, 75389, 34816, 92877, 59890, 54397, 92083, 89296, 1707, 5610, 34330, 41120, 67757, 11372, 85029, 13697, 95361, 97702, 65501, 53330, 84555, 29526, 49509, 16848, 50550, 14606, 88130, 23106, 82414, 56201, 12152, 69891, 27209, 39084, 69854, 87244, 37928, 23390, 33544, 31034, 11421, 55888, 96983, 58579, 12490, 74126, 83953, 58941, 53267, 98444, 6565, 78990, 51416, 42241, 58243, 21422, 24543, 15259, 17272, 44926, 47795, 42128, 31213, 79529, 5851, 54657, 98674, 11703, 20715, 51970, 2575, 85531, 41888, 76970, 22440, 71140, 9487, 34478, 47613, 73280, 27725, 40385, 20484, 76, 87387, 66606, 71676, 83949, 23724, 37451, 57184, 39278, 1671, 85201, 5303, 78781, 57315, 50227, 87340, 46457, 47114, 49638, 61429, 29361, 26182, 18476, 23160, 67182, 91016, 22374, 29619, 65741, 22871, 69449, 18861, 37075, 78317, 69373, 44754])","CNN(layers=[DropoutL(rate=Rate(rate=5.956493769507517e-06)), ConvL(filters=Filters(filters=256), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'examples.CNN.DropoutL'>: 0, <class 'examples.CNN.LType'>: 0, <class 'int'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.Padding'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'str'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'float'>: 0, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.Strides'>: 0}"
0.024965427815914154,2.775261163711548,29,cnn,"Genotype(dna=[32042, 10553, 46188, 88374, 36764, 77831, 88518, 60566, 7528, 49974, 45385, 21205, 75194, 3572, 60401, 48926, 99791, 85514, 34589, 85640, 58917, 79539, 25377, 14619, 47733, 88694, 98429, 93083, 16728, 94677, 19294, 47779, 11190, 1729, 32496, 48191, 38496, 14264, 3561, 32893, 7186, 87885, 37256, 73894, 7770, 24698, 34424, 77890, 56992, 60464, 45831, 31080, 8371, 83766, 93684, 45388, 73148, 19115, 47816, 59963, 61668, 19684, 38964, 55059, 89413, 65011, 12974, 33984, 10991, 6026, 64796, 80329, 31540, 1499, 29002, 6056, 16734, 39334, 71487, 79228, 3351, 68671, 60022, 80730, 51657, 6799, 45288, 42238, 13443, 92368, 55973, 8929, 79133, 83081, 22639, 23368, 59135, 40433, 40825, 5238, 53778, 87769, 44948, 89786, 43116, 914, 7714, 49898, 6714, 52868, 56291, 9672, 48434, 46500, 66158, 20388, 93832, 99526, 38436, 27098, 72026, 673, 71675, 59358, 65373, 95262, 76233, 52672, 87398, 12619, 65959, 55135, 79279, 93982, 9652, 28128, 92974, 28793, 36389, 38819, 92622, 44553, 30763, 50462, 37951, 52540, 15739, 44127, 45947, 91059, 41490, 87949, 16494, 24431, 79470, 58986, 69560, 26588, 30653, 42074, 54214, 96542, 53613, 54380, 3283, 50887, 19609, 86114, 4642, 80561, 88314, 23984, 65485, 41764, 81876, 32471, 10561, 95595, 98264, 3604, 80053, 62482, 54364, 23985, 67504, 1725, 29076, 10010, 58816, 48816, 63628, 43863, 26949, 58440, 71434, 55090, 12361, 66497, 49639, 48995, 41220, 75381, 134, 40596, 35568, 18121, 12883, 84897, 14656, 58948, 30001, 46991, 50741, 83638, 45174, 8139, 51319, 96012, 7941, 21487, 44577, 93748, 8327, 93502, 44724, 86152, 85108, 91157, 47035, 82555, 90081, 71146, 57339, 56480, 75671, 83380, 96884, 38944, 97811, 23305, 11727, 41133, 22164, 28915, 42635, 28230, 56958, 2782, 5636, 76333, 39857, 28580, 43639, 91336, 39854, 31490])","CNN(layers=[ConvL(filters=Filters(filters=512), ksize=Ksize(ksize=4), strides=Strides(strides=1), padding=Padding(padding='valid'), activation=Activation(activation='relu'))])","{<class 'examples.CNN.Units'>: 0, <class 'examples.CNN.Activation'>: 0, <class 'int'>: 0, <class 'examples.CNN.PoolType'>: 0, <class 'examples.CNN.ConvL'>: 0, <class 'examples.CNN.PoolL'>: 0, <class 'examples.CNN.LTypeLayer'>: 0, <class 'examples.CNN.CNN'>: 1, <class 'examples.CNN.Start'>: 1, <class 'examples.CNN.DropoutL'>: 0, <class 'str'>: 0, <class 'examples.CNN.Filters'>: 0, <class 'examples.CNN.DenseL'>: 0, <class 'float'>: 0, <class 'examples.CNN.Parameter'>: 0, <class 'examples.CNN.LType'>: 0, <class 'examples.CNN.Ksize'>: 0, <class 'examples.CNN.Layer'>: 0, <class 'examples.CNN.Strides'>: 0, <class 'examples.CNN.Rate'>: 0, <class 'examples.CNN.EmptyL'>: 0, <class 'examples.CNN.Padding'>: 0}"
